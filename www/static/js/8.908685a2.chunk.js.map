{"version":3,"sources":["util/Statelabel.js","util/PlainSelect.js","util/paramsHasChanged.js","routes/Stations/StationsMap.js","util/isDate.js","routes/Connectors/ConnectorButtons.js","routes/Stations/DriverStationDetail.js","routes/Stations/DriverStations.js"],"names":["confirm","Modal","Statelabel","props","popoverToggle","setState","state","popoverOpen","methods","load","pendingStart","onPendingStart","pending","pendingEnd","onPendingEnd","context","api","q","classcode","id","toArray","run","method","result","message","success","m","onFinish","error","ask","actioncode","title","content","icon","onOk","intl","formatMessage","this","statelabel","label","className","color","created","enabled","disabled","deleted","statetypecode","readOnly","length","spinning","map","visible","onClick","trigger","onVisibleChange","React","Component","contextType","Context","withOnline","injectIntl","d","statenewlabel","statenewtypecode","Option","Select","PlainSelect","createSearch","search","searchText","async","push","field","labelKey","compare","value","enabledOnly","getLabelKey","getIdKey","valueKey","shureHaveValue","items","find","item","fields","reclimit","query","concat","extraFields","fetchFn","cache","onSearch","onChange","i","then","prevProps","idx","option","formatLabel","defaultActiveFirstOption","allowClear","loading","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","paramsHasChanged","prevParams","match","params","nowParams","param1","param2","param3","StationsMap","key","prefix","getItemGeo","geo","lat","latitude","lng","longitude","config","window","appConfig","mapLanguage","mapLoaded","stations","Array","isArray","mapRef","createRef","points","filter","lang","defaultState","center","zoom","width","height","modules","onLoad","ymaps","current","setBounds","util","bounds","fromPoints","instanceRef","ref","balloonContent","description","modelname","vendorname","defaultGeometry","options","iconLayout","iconImageHref","iconImageSize","properties","balloonContentHeader","join","balloonContentFooter","isDate","date","Date","isNaN","charging","includes","statecode","reserved","Fragment","e","stopPropagation","chargeToggle","reserveToggle","statenewcode","online","tick","DriverStationDetail","stationId","readings","Promise","allSettled","access","files","detailPending","locale","connectors","DetailRow","property","toLocaleString","gutter","xs","Flex","between","u","prop","c","chargername","chargerdescription","style","whiteSpace","ConnectorButtons","to","f","alt","src","apiDomain","link","withRouter","DriverStations","setParams","carId","chargerId","charger","drawerClose","drawerVisible","onPlacemarkClick","drawerItem","mapDefaultCenter","CircularProgress","placement","onClose","CustomScrollbars","Helmet","visibility","size","identity","v","history","chargerac"],"mappings":"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","file":"static/js/8.908685a2.chunk.js","sourcesContent":["import { message, Popover, Spin, Tag, Modal } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport React from \"react\";\nimport Context from \"../Context\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { withOnline } from \"../api/online\";\n\nconst { confirm } = Modal;\n\nclass Statelabel extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverOpen: false,\n      methods: [],\n    };\n  }\n\n  popoverToggle = () => {\n    this.setState(\n      (state) => {\n        return {\n          popoverOpen: !state.popoverOpen,\n          methods: !state.popoverOpen ? [] : state.methods,\n        };\n      },\n      () => this.load()\n    );\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  load = async () => {\n    if (this.state.popoverOpen) {\n      this.pendingStart();\n      let methods = await this.context.api.q(\n        `/${this.props.classcode}/method`,\n        { id: this.props.id },\n        { toArray: true }\n      );\n      this.setState({ methods }, () => this.pendingEnd());\n    }\n  };\n\n  run = async (method) => {\n    this.pendingStart();\n    let result = await this.context.api.q(\"/method/run\", {\n      id: this.props.id,\n      method: method.id,\n    });\n    this.pendingEnd();\n    this.popoverToggle();\n    if (!result) {\n      message.error(this.m(\"method.fail\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"method.success\"));\n      if (this.props.onFinish) {\n        this.props.onFinish(method);\n      }\n    }\n  };\n\n  ask = async (method) => {\n    if (method.actioncode === \"drop\") {\n      confirm({\n        title: this.m(\"method.confirm.title\"),\n        content: this.m(\"method.confirm.text\"),\n        icon: <ExclamationCircleOutlined />,\n        onOk: () => {\n          this.run(method);\n        },\n      });\n    } else {\n      this.run(method);\n    }\n  };\n\n  m = (id) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id });\n  };\n\n  render() {\n    if (!this.props?.statelabel) return null;\n\n    const { pending, methods = [] } = this.state;\n\n    const colors = {\n      created: \"processing\",\n      enabled: \"success\",\n      disabled: \"default\",\n      deleted: \"error\",\n    };\n\n    const label = (\n      <Tag className=\"gx-m-0\" color={colors[this.props.statetypecode]}>\n        {this.props.statelabel}\n      </Tag>\n    );\n\n    if (this.props.readOnly) return label;\n\n    return (\n      <Popover\n        content={\n          <div className={`${methods.length === 0 && \"gx-p-3\"}`}>\n            <Spin spinning={pending}>\n              {methods.map((method) => {\n                if (!method.visible) return null;\n                return (\n                  <div\n                    key={method.id}\n                    onClick={() => this.ask(method)}\n                    className=\"gx-my-2 gx-pointer gx-link\"\n                  >\n                    {method.label}\n                  </div>\n                );\n              })}\n            </Spin>\n          </div>\n        }\n        trigger=\"click\"\n        visible={this.state.popoverOpen}\n        onVisibleChange={this.popoverToggle}\n      >\n        <div className=\"gx-pointer\">{label}</div>\n      </Popover>\n    );\n  }\n}\n\nconst mapOnlineProps = {\n  statelabel: (d) => d.statenewlabel,\n  statetypecode: (d) => d.statenewtypecode,\n};\nexport default withOnline(injectIntl(Statelabel), mapOnlineProps);\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Select } from \"antd\";\nimport Context from \"../Context\";\n\nconst { Option } = Select;\n\nclass PlainSelect extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      pending: false,\n      items: [],\n    };\n  }\n  componentDidMount() {\n    this.load().then(this.shureHaveValue());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.shureHaveValue();\n    }\n  }\n\n  createSearch = () => {\n    let search = this.props.search || [];\n    if (this.state.searchText && this.props.async) {\n      search.push({\n        field: this.props.labelKey || \"label\",\n        compare: \"IKE\",\n        value: `%${this.state.searchText}%`,\n      });\n    }\n    if (this.props.enabledOnly) {\n      search.push({\n        field: \"statetypecode\",\n        compare: \"EQL\",\n        value: \"enabled\",\n      });\n    }\n    return search;\n  };\n\n  getLabelKey = () => this.props.labelKey || \"label\";\n\n  getIdKey = () => this.props.valueKey || \"id\";\n\n  shureHaveValue = async () => {\n    if (this.props.async) {\n      if (\n        !this.state.items.find(\n          (item) => item[this.getIdKey()] === this.props.value\n        )\n      ) {\n        this.setState({ pending: true });\n        let result = await this.context.api.q(\"/object/get\", {\n          id: this.props.value,\n          fields: [this.getIdKey(), this.getLabelKey()],\n        });\n        this.setState({ pending: false });\n        if (result?.[this.getLabelKey()]) {\n          this.setState(({ items }) => {\n            items.push(result);\n            return { items };\n          });\n        }\n      }\n    }\n  };\n\n  load = async () => {\n    if (this.props.items) {\n      this.setState({ items: this.props.items });\n      return;\n    }\n\n    let items = [];\n\n    let reclimit = this.props.async ? 1 : 0;\n\n    if (this.props.query) {\n      this.setState({ pending: true });\n      let search = this.createSearch();\n\n      let fields = [this.getIdKey(), this.getLabelKey()].concat(\n        this.props.extraFields || []\n      );\n\n      let fetchFn = this.props.cache\n        ? this.context.api.cache\n        : this.context.api.q;\n      items = await fetchFn(\n        this.props.query,\n        { search, reclimit, fields },\n        { toArray: true }\n      );\n      this.setState({ pending: false, items });\n    }\n  };\n  onSearch = async (value) => {\n    if (this.props.async) {\n      this.setState({ searchText: value }, () => this.load());\n    }\n  };\n\n  onChange = (value) => {\n    let item = this.state.items.find((i) => i[this.getIdKey()] === value);\n    this.props.onChange(value, item);\n  };\n\n  render() {\n    let valueRendered = false;\n    let items = this.state.items.map((item, idx) => {\n      let option = item || {};\n      let value = option[this.getIdKey()];\n      let label = this.props.formatLabel\n        ? this.props.formatLabel(item)\n        : option[this.getLabelKey()];\n      if (value === this.props.value) valueRendered = true;\n      return (\n        <Option key={idx} value={value}>\n          {label}\n        </Option>\n      );\n    });\n\n    return (\n      <Select\n        defaultActiveFirstOption={false}\n        allowClear={this.props.allowClear}\n        loading={this.state.pending ? true : false}\n        value={!this.state.pending ? this.props.value : null}\n        showSearch\n        placeholder={this.props.placeholder}\n        optionFilterProp=\"children\"\n        onChange={this.onChange}\n        onSearch={this.onSearch}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {items}\n      </Select>\n    );\n  }\n}\nexport default injectIntl(PlainSelect);\n","export default function paramsHasChanged(prevProps, props) {\n  const prevParams = prevProps.match.params || {};\n  const nowParams = props.match.params || {};\n\n  if (\n    prevParams.param1 !== nowParams.param1 ||\n    prevParams.param2 !== nowParams.param2 ||\n    prevParams.param3 !== nowParams.param3\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import React from \"react\";\nimport { Empty, Spin } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { YMaps, Map, Placemark, ZoomControl } from \"react-yandex-maps\";\n\nclass StationsMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.config = window.appConfig || { mapLanguage: \"ru_RU\" };\n    this.state = {\n      mapLoaded: false,\n    };\n  }\n\n  m = (key, prefix = \"stations.map.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  getItemGeo = (item) => {\n    let geo = item?.geo?.[0] || {};\n    let lat = geo.latitude;\n    let lng = geo.longitude;\n    if (lat && lng) {\n      return [lat, lng];\n    }\n    return null;\n  };\n\n  render() {\n    const { stations } = this.props;\n    if (!Array.isArray(stations)) return null;\n    if (stations.length === 0) return <Empty />;\n\n    const mapRef = React.createRef();\n\n    const points = stations\n      .map((item) => this.getItemGeo(item))\n      .filter((geo) => geo);\n\n    if (points.length === 0) {\n      return (\n        <div className={this.props.className}>\n          <Empty />\n        </div>\n      );\n    }\n\n    const lang = this.config.mapLanguage;\n\n    return (\n      <div className={this.props.className}>\n        {!this.state.mapLoaded && <Spin spinning></Spin>}\n        <YMaps key={lang} query={{ lang }} >\n          <Map\n            defaultState={{ center: points[0] || [], zoom: 9 }}\n            width={\"100%\"}\n            height={\"100%\"}\n            modules={[\"geoObject.addon.balloon\", \"util.bounds\"]}\n            onLoad={(ymaps) => {\n              this.setState({ mapLoaded: true });\n              if (points.length > 1) {\n                mapRef.current.setBounds(ymaps.util.bounds.fromPoints(points));\n              }\n            }}\n            instanceRef={(ref) => {\n              if (ref) {\n                mapRef.current = ref;\n              }\n            }}\n          >\n            {stations.map((item, idx) => {\n              let geo = this.getItemGeo(item);\n              if (!geo) return null;\n\n              let balloonContent = [];\n              if (item.description)\n                balloonContent.push(`<div>${item.description || \"\"}</div>`);\n              if (item.modelname)\n                balloonContent.push(\n                  `<div>${item.modelname || \"\"} ${item.vendorname || \"\"}</div>`\n                );\n\n              return (\n                <Placemark\n                  key={idx}\n                  defaultGeometry={geo}\n                  options={{\n                    iconLayout: \"default#image\",\n                    iconImageHref: \"/assets/images/images-32-removebg-preview.png\",\n                    iconImageSize: [32, 32],\n                  }}\n                  properties={{\n                    balloonContentHeader: `${item.label}`,\n                    balloonContent: balloonContent.join(\"\"),\n                    balloonContentFooter: `<a href=\"/crm/station/${\n                      item.id\n                    }\">${this.m(\"more\")}</a>`,\n                  }}\n                />\n              );\n            })}\n            <ZoomControl />\n          </Map>\n        </YMaps>\n      </div>\n    );\n  }\n}\nexport default injectIntl(StationsMap);\n","export default function isDate(date) {\n  if (!date) return false;\n  return new Date(date) !== \"Invalid Date\" && !isNaN(new Date(date));\n}\n","import { FallOutlined, HistoryOutlined } from \"@ant-design/icons\";\nimport { Button, Tooltip } from \"antd\";\nimport React from \"react\";\nimport { withOnline } from \"../../api/online\";\n\nfunction ConnectorButtons(props) {\n  let charging = [\"preparing\", \"charging\", \"finishing\"].includes(\n    props.statecode\n  );\n  let reserved = [\"reserved\"].includes(props.statecode);\n\n  return (\n    <React.Fragment>\n      <Tooltip title={props.m(\"btn.charge\")}>\n        <Button\n          className=\"gx-mr-1\"\n          onClick={(e) => {\n            e.stopPropagation();\n            props.chargeToggle(charging);\n          }}\n          icon={\n            <FallOutlined className={`${charging ? \"gx-text-warning\" : \"\"}`} />\n          }\n        />\n      </Tooltip>\n      <Tooltip title={props.m(\"btn.reserve\")}>\n        <Button\n          onClick={(e) => {\n            e.stopPropagation();\n            props.reserveToggle(reserved);\n          }}\n          icon={\n            <HistoryOutlined\n              className={`${reserved ? \"gx-text-warning\" : \"\"}`}\n            />\n          }\n        />\n      </Tooltip>\n    </React.Fragment>\n  );\n}\nconst mapOnlineProps = {\n  statecode: (d) => d.statenewcode,\n};\nexport default withOnline(ConnectorButtons, mapOnlineProps);\n","import React from \"react\";\nimport Context from \"../../Context\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport { Button, Col, Empty, message, Row, Spin, Tooltip } from \"antd\";\nimport isDate from \"../../util/isDate\";\nimport Flex from \"../../util/Flex\";\nimport Statelabel from \"../../util/Statelabel\";\nimport { FallOutlined, HistoryOutlined } from \"@ant-design/icons\";\nimport ConnectorButtons from \"../Connectors/ConnectorButtons\";\nimport { online } from \"../../api/online\";\n\n//if (!window.onlineInterval && config.apiCheckInterval) {\n//\twindow.setInterval(() => online.tick(), config.apiCheckInterval);\n//}\nonline.tick();\nclass DriverStationDetail extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailPending: false,\n      pending: false,\n      stationId: false,\n      item: {},\n      access: {},\n      files: [],\n    };\n  }\n  m = (key, prefix = \"stations.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.stationId !== this.props.stationId ||\n      prevProps.intl.locale !== this.props.intl.locale\n    ) {\n      this.setState({ item: {} }, () => this.load());\n    }\n  }\n\n  load = async () => {\n    if (this.props.stationId) {\n      this.pendingStart();\n\n      let readings = [\n        this.context.api.q(\"/charge_point/get\", {\n          id: this.props.stationId,\n        }),\n        this.context.api.q(\"/object/access/decode\", {\n          id: this.props.stationId,\n        }),\n        this.context.api.q(\n          \"/object/file\",\n          {\n            id: this.props.stationId,\n          },\n          { toArray: true }\n        ),\n      ];\n      let [item, access, files] = (await Promise.allSettled(readings)).map(\n        (result) => result.value\n      );\n\n      this.setState({ item, access, files }, () => this.pendingEnd());\n    } else {\n      this.setState({ item: {}, access: {}, files: [] });\n    }\n  };\n\n  chargeToggle = async (item = {}) => {\n    if (item.id) {\n      this.setState({ detailPending: true });\n      let result = false;\n      if (item.charging) {\n        result = await this.context.api.q(\"/connector/remote/stop\", {\n          id: item.id,\n        });\n      } else {\n        result = await this.context.api.q(\"/connector/remote/start\", {\n          id: item.id,\n        });\n      }\n      this.setState({ detailPending: false });\n      if (result === false) {\n        message.error(this.m(\"method.fail\", \"\"));\n      } else {\n        message.success(this.m(\"method.success\", \"\"));\n      }\n      this.load();\n    }\n  };\n\n  reserveToggle = async (item = {}) => {\n    if (item.id) {\n      this.setState({ detailPending: true });\n      let result = false;\n      if (item.reserved) {\n        result = await this.context.api.q(\"/connector/reserve/cancel\", {\n          id: item.id,\n        });\n      } else {\n        result = await this.context.api.q(\"/connector/reserve/now\", {\n          id: item.id,\n        });\n      }\n      this.setState({ detailPending: false });\n      if (result === false) {\n        message.error(this.m(\"method.fail\", \"\"));\n      } else {\n        message.success(this.m(\"method.success\", \"\"));\n      }\n      this.load();\n    }\n  };\n\n  render() {\n    const { pending, item, access, files } = this.state;\n    const connectors = item.connectors || [];\n\n    const displayDetailProps = [\n      \"typename\",\n      \"modelname\",\n      \"vendorname\",\n      \"serialnumber\",\n      \"boxserialnumber\",\n      \"iccid\",\n      \"imsi\",\n      \"networkname\",\n      \"connectionupdate\",\n      \"lastupdate\",\n    ];\n\n    const DetailRow = ({ item, property }) => {\n      let value = item?.[property];\n      if (!value) return null;\n      if (isDate(value)) value = new Date(value).toLocaleString();\n      return (\n        <Row gutter={[16, 16]} className=\"gx-mb-2\">\n          <Col className=\"gx-text-muted gx-font-weight-light gx-pr-2\" xs={10}>\n            {this.m(property)}\n          </Col>\n          <Col xs={14}>{value}</Col>\n        </Row>\n      );\n    };\n\n    return (\n      <div>\n        <Spin spinning={pending}>\n          {!item?.id && <Empty />}\n          {item?.id && (\n            <div className=\"gx-mb-3\">\n              {item?.description && (\n                <div className=\"gx-text-muted gx-font-weight-light gx-mb-3\">\n                  {item.description}\n                </div>\n              )}\n              <Flex between className=\"gx-mb-3 gx-pr-1\">\n                <h4>{this.m(\"details\")}</h4>\n                <Statelabel\n                  {...item}\n                  readOnly={!access?.u}\n                  onFinish={this.load}\n                />\n              </Flex>\n              {displayDetailProps.map((prop) => (\n                <DetailRow key={prop} item={item} property={prop} />\n              ))}\n              {connectors.length > 0 && (\n                <>\n                  <Spin spinning={this.state.detailPending}>\n                    <hr />\n                    {connectors.map((c, idx) => {\n                      return (\n                        <div className=\"gx-mb-2\" key={idx}>\n                          <Flex between>\n                            <div>\n                              {c.chargername}\n                              <div className=\"gx-font-weight-light gx-text-small gx-text-muted\">\n                                {c.chargerdescription}\n                              </div>\n                            </div>\n                            <div className=\"gx-ml-2 gx-mr-1\">\n                              <div style={{ whiteSpace: \"nowrap\" }}>\n                                <ConnectorButtons\n                                  m={this.m}\n                                  {...c}\n                                  chargeToggle={(value) =>\n                                    this.chargeToggle(c, value)\n                                  }\n                                  reserveToggle={(value) =>\n                                    this.reserveToggle(c, value)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </Flex>\n                        </div>\n                      );\n                    })}\n                  </Spin>\n                </>\n              )}\n              {access?.u && (\n                <Link to={`/crm/station/${item.id}`}>\n                  <Button className=\"gx-mb-0 gx-mt-4\">\n                    {this.m(\"edit\", \"\")}\n                  </Button>\n                </Link>\n              )}\n              {files.length > 0 && (\n                <>\n                  <hr />\n                  {files.map((f, idx) => {\n                    return (\n                      <img\n                        key={idx}\n                        alt=\"\"\n                        src={window.appConfig.apiDomain + f.link}\n                      />\n                    );\n                  })}\n                </>\n              )}\n            </div>\n          )}\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(DriverStationDetail));\n","import { Card, Drawer, Empty } from \"antd\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { YMaps, Map, Placemark, ZoomControl } from \"react-yandex-maps\";\nimport CircularProgress from \"../../components/CircularProgress\";\nimport Context from \"../../Context\";\nimport CustomScrollbars from \"../../util/CustomScrollbars\";\nimport paramsHasChanged from \"../../util/paramsHasChanged\";\nimport PlainSelect from \"../../util/PlainSelect\";\nimport DriverStationDetail from \"./DriverStationDetail\";\nimport StationsMap from \"./StationsMap\";\n\nclass DriverStations extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n\tthis.config = window.appConfig || { mapLanguage: \"ru_RU\" };\n    this.state = {\n\t\t\n      mapLoaded: false,\n      pending: false,\n      stations: [],\n\n      carId: false,\n      chargerId: false,\n\n      drawerVisible: false,\n      drawerItem: {},\n    };\n  }\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  m = (key, prefix = \"stations.map.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  componentDidMount() {\n    this.setParams();\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (paramsHasChanged(prevProps, this.props)) {\n      this.setParams();\n    }\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.load();\n    }\n  }\n\n  setParams = () => {\n    const { param1: carId, param2: chargerId } = this.props.match.params;\n    this.setState(\n      {\n        carId,\n        chargerId,\n      },\n      () => this.load()\n    );\n  };\n\n  load = async () => {\n    this.pendingStart();\n\n    let search = [];\n    if (this.state.chargerId) {\n      search.push({\n        field: \"connectors\",\n        compare: \"GIN\",\n        value: [{ charger: this.state.chargerId }],\n      });\n    }\n    let stations = await this.context.api.q(\n      \"/charge_point/list\",\n      { search },\n      { toArray: true }\n    );\n    this.setState({ stations }, () => this.pendingEnd());\n  };\n\n  getItemGeo = (item) => {\n    let geo = item?.geo?.[0] || {};\n    let lat = geo.latitude;\n    let lng = geo.longitude;\n    if (lat && lng) {\n      return [lat, lng];\n    }\n    return null;\n  };\n\n  drawerClose = () => {\n    this.setState({ drawerVisible: false });\n  };\n\n  onPlacemarkClick = (drawerItem) => {\n    this.setState({ drawerItem, drawerVisible: true });\n  };\n\n  render() {\n    const { stations, mapLoaded, pending, drawerItem } = this.state;\n    let defaultCenter = window.appConfig.mapDefaultCenter;\n\tif (!Array.isArray(stations)) return null;\n    if (stations.length === 0) return <Empty />;\n\n    \n      const points = stations\n      .map((item) => this.getItemGeo(item))\n      .filter((geo) => geo);\n\t  if (points.length === 0) {\n\t\treturn (\n\t\t  <div className={this.props.className}>\n\t\t\t<Empty />\n\t\t  </div>\n\t\t);\n\t  }\n  \n\t  \n    const mapRef = React.createRef();\n\tconst lang = this.config.mapLanguage;\n    return (\n      <>\n        {(!mapLoaded || pending) && <CircularProgress />}\n        <Drawer\n          title={drawerItem?.label}\n          placement=\"right\"\n          onClose={this.drawerClose}\n          visible={this.state.drawerVisible}\n        >\n          <CustomScrollbars>\n            <DriverStationDetail stationId={drawerItem?.id} />\n          </CustomScrollbars>\n        </Drawer>\n        <Helmet>\n          <title>{this.m(\"stations\")}</title>\n        </Helmet>\n        <div\n          className=\"gx-st-map huge\"\n          style={{ visibility: mapLoaded && !pending ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"filterbox\">\n            <Card size=\"small\">\n              <PlainSelect\n                value={this.state.carId}\n                placeholder={this.m(\"forcar\")}\n                formatLabel={(item) => `${item.label} ${item.identity}`}\n                extraFields={[\"identity\", \"chargerac\"]}\n                enabledOnly\n                labelKey=\"label\"\n                query=\"/car/list\"\n                onChange={(v, item) => {\n\n                  this.props.history.push(\n                    `/driver/stations/${v}/${item.chargerac || \"\"}`\n                  );\n                }}\n              />\n            </Card>\n          </div>\n          <YMaps key={lang} query={{ lang }}>\n            <Map\n              defaultState={{ center: points[0] || [50.85045, 4.34878], zoom: 9 }}\n              width={\"100%\"}\n              height={\"100%\"}\n              modules={[\"geoObject.addon.balloon\", \"util.bounds\"]}\n              onLoad={(ymaps) => {\n                this.setState({ mapLoaded: true });\n                if (points.length > 1) {\n                  mapRef.current.setBounds(\n                    ymaps.util.bounds.fromPoints(points)\n                  );\n                }\n              }}\n              instanceRef={(ref) => {\n                if (ref) {\n                  mapRef.current = ref;\n                }\n              }}\n            >\n              {stations.length !== 0 ? stations.map((item, idx) => {\n                let geo = this.getItemGeo(item);\n                if (!geo) return null;\n\n                let balloonContent = [];\n                if (item.description)\n                  balloonContent.push(`<div>${item.description || \"\"}</div>`);\n                if (item.modelname)\n                  balloonContent.push(\n                    `<div>${item.modelname || \"\"} ${\n                      item.vendorname || \"\"\n                    }</div>`\n                  );\n\n                return (\n                  <Placemark\n                    key={idx}\n                    defaultGeometry={geo}\n                    onClick={() => this.onPlacemarkClick(item)}\n                    options={{\n                      iconLayout: \"default#image\",\n                      iconImageHref: \"/assets/images/images-32-removebg-preview.png\",\n                      iconImageSize: [32, 32],\n                    }}\n                  />\n                );\n              }) : []}\n              <ZoomControl />\n            </Map>\n          </YMaps>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(DriverStations));\n"],"sourceRoot":""}