{"version":3,"sources":["routes/Networks/Networks.js","util/key.js","components/Datatable/DataTable.js","components/Datatable/DataTableSearch.js","util/Statelabel.js","api/online.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","util/PlainSelect.js","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js","util/EditModal.js","routes/Admin/Reference/referenceEditForm.js"],"names":["Networks","props","m","key","prefix","intl","formatMessage","id","onMethodFinish","setState","tableUuid","editModalToggle","editModalId","state","editModalVisible","editModalFinish","setColumns","columns","text","title","className","onClick","e","stopPropagation","icon","dataIndex","sorter","render","value","item","description","filterDropdown","filterIcon","filtered","style","color","undefined","width","onFinish","this","prevProps","locale","essence","onClose","form","referenceEditForm","call","visible","uuid","path","React","Component","contextType","Context","injectIntl","Date","toString","min","max","Math","ceil","floor","random","DataTable","makeBasicDefaultOrderParams","result","forEach","col","defaultSortOrder","push","makeQueryParams","mode","queryParams","pagination","filters","search","Object","keys","currentColumn","columnGet","date","field","compare","startOf","endOf","valarr","forceSearch","concat","forceFilter","filter","column","orderby","order","total","skipPagination","reclimit","pageSize","recoffset","current","count","length","context","api","q","replace","forceToken","skipToken","load","data","loadStart","toArray","loadEnd","loading","onLoadStart","onLoadEnd","handleTableChange","scroll","x","showSorterTooltip","rowKey","record","dataSource","onChange","DataTableSearch","setSelectedKeys","selectedKeys","confirm","clearFilters","useIntl","padding","placeholder","target","onKeyPress","paddingTop","type","Modal","Statelabel","popoverToggle","popoverOpen","methods","pendingStart","onPendingStart","pending","pendingEnd","onPendingEnd","classcode","run","method","message","success","error","ask","actioncode","content","onOk","statelabel","label","created","enabled","disabled","deleted","statetypecode","readOnly","spinning","map","trigger","onVisibleChange","withOnline","d","statenewlabel","statenewtypecode","online","is","tick","fetch","goOffline","dispatch","log","goOnline","detail","window","dispatchEvent","CustomEvent","token","accessToken","get","dt","setMilliseconds","getMilliseconds","config","apiCheckInterval","body","JSON","stringify","json","response","headers","Headers","append","url","apiDomain","apiPath","cache","items","Array","isArray","n","object","itemsCount","debug","console","mapOnlineProps","propsKeys","onOnlineChanged","passProps","propName","addEventListener","removeEventListener","anyChanges","onlineInterval","setInterval","__rest","s","t","p","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","CheckableTag","_a","_classNames","customizePrefixCls","prefixCls","checked","restProps","getPrefixCls","ConfigContext","cls","classNames","_defineProperty","_extends","PresetColorRegex","RegExp","PresetColorTypes","join","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","ref","children","closeIcon","_a$closable","closable","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","setVisible","isPresetColor","test","tagStyle","backgroundColor","presetColor","tagClassName","handleCloseClick","defaultPrevented","isNeedWave","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","Option","Select","PlainSelect","createSearch","searchText","async","labelKey","enabledOnly","getLabelKey","getIdKey","valueKey","shureHaveValue","find","fields","query","extraFields","fetchFn","onSearch","then","idx","option","formatLabel","defaultActiveFirstOption","allowClear","showSearch","optionFilterProp","filterOption","input","toLowerCase","PlusOutlined","AntdIcon","_objectSpread","PlusOutlinedSvg","displayName","EditModal","loadPending","loadPath","exact","queryResult","initialValues","save","saveData","prepareData","savePath","savePending","footer","onCancel","name","layout","scrollToFirstError","htmlType","TextArea","Input","reference","appConfig","adminReferences","formItems","rules","required","component","entries","Item"],"mappings":"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","file":"static/js/26.758f8eae.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\nimport { PlusOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport { injectIntl } from \"react-intl\";\nimport Context from \"../../Context\";\nimport key from \"../../util/key\";\nimport DataTable from \"../../components/Datatable/DataTable\";\nimport DataTableSearch from \"../../components/Datatable/DataTableSearch\";\nimport Statelabel from \"../../util/Statelabel\";\nimport EditModal from \"../../util/EditModal\";\nimport referenceEditForm from \"../Admin/Reference/referenceEditForm\";\n\nclass Networks extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableUuid: key(),\n      columns: [],\n\n      editModalVisible: false,\n      editModalId: null,\n    };\n  }\n  m = (key, prefix = \"admin.reference.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n  componentDidMount() {\n    this.setColumns();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.setColumns();\n    }\n  }\n\n  onMethodFinish = () => {\n    this.setState({\n      tableUuid: key(),\n    });\n    if (this.props.onMethodFinish) {\n      this.props.onMethodFinish();\n    }\n  };\n\n  editModalToggle = (editModalId = null) => {\n    this.setState((state) => {\n      return { editModalVisible: !state.editModalVisible, editModalId };\n    });\n  };\n\n  editModalFinish = () => {\n    this.editModalToggle();\n    this.onMethodFinish();\n  };\n\n  setColumns = () => {\n    this.setState({\n      columns: [\n        {\n          text: true,\n          title: (\n            <>\n              <Button\n                className=\"gx-mr-4\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.editModalToggle();\n                }}\n                icon={<PlusOutlined />}\n              />\n              {this.m(\"name\")}\n            </>\n          ),\n          dataIndex: \"name\",\n          sorter: true,\n          render: (value, item) => (\n            <>\n              <div>\n                <div\n                  className=\"gx-pointer gx-text-primary\"\n                  onClick={() => this.editModalToggle(item.id)}\n                >\n                  <>{value}</>\n                </div>\n              </div>\n\n              {item.description && (\n                <div className=\"gx-font-weight-light gx-text-muted\">\n                  {item.description}\n                </div>\n              )}\n            </>\n          ),\n\n          filterDropdown: (props) => <DataTableSearch {...props} />,\n          filterIcon: (filtered) => (\n            <SearchOutlined\n              style={{ color: filtered ? \"#1890ff\" : undefined }}\n            />\n          ),\n        },\n\n        {\n          title: this.m(\"typename\"),\n          dataIndex: \"typename\",\n          sorter: true,\n          width: \"25%\",\n          render: (value, item) => (\n            <>\n              <div>{value}</div>\n            </>\n          ),\n        },\n\n        {\n          title: this.m(\"statename\"),\n          dataIndex: \"statename\",\n          sorter: true,\n          width: \"10%\",\n          render: (value, item) => (\n            <div className=\"gx-text-right\">\n              <Statelabel onFinish={this.onMethodFinish} {...item} />\n            </div>\n          ),\n        },\n      ],\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <EditModal\n          essence={\"network\"}\n          onClose={this.editModalToggle}\n          form={referenceEditForm.call(this, { essence: \"network\" })}\n          onFinish={this.editModalFinish}\n          visible={this.state.editModalVisible}\n          id={this.state.editModalId}\n        />\n        <DataTable\n          uuid={this.state.tableUuid}\n          columns={this.state.columns}\n          path={\"/network/list\"}\n        />\n      </>\n    );\n  }\n}\n\nexport default injectIntl(Networks);\n","function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default function key() {\n  return `f${(+new Date()).toString(16)}${getRandomIntInclusive(1000, 9999)}`;\n}\n","import React from \"react\";\nimport Context from \"../../Context\";\nimport { Table } from \"antd\";\n\nexport default class DataTable extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: props.columns,\n      data: [],\n      loading: false,\n      pagination: {\n        current: 1,\n        pageSize: props.pageSize || 10,\n        total: false,\n      },\n      filters: {},\n      sorter: {},\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.columns !== this.state.columns) {\n      this.setState({ columns: this.props.columns }, () => this.load());\n    }\n    if (this.props.uuid !== prevProps.uuid) {\n      this.load();\n    }\n    if (this.props.forceSearch !== prevProps.forceSearch) {\n      this.load();\n    }\n  }\n\n  makeBasicDefaultOrderParams = () => {\n    let result = [];\n    if (this.props.columns) {\n      this.props.columns.forEach((col) => {\n        if (col.defaultSortOrder) {\n          result.push(\n            `${col.dataIndex} ${\n              col.defaultSortOrder === \"ascend\" ? \"ASC\" : \"DESC\"\n            }`\n          );\n        }\n      });\n    }\n    return result;\n  };\n\n  makeQueryParams = (mode = {}) => {\n    let queryParams = {};\n    const { pagination, filters, sorter } = this.state;\n\n    //provide filters\n    queryParams.search = [];\n\n    const filterFields = Object.keys(filters);\n    filterFields.forEach((key) => {\n      if (filters[key]) {\n        let currentColumn = this.columnGet(key);\n\n        //Handle dates\n        if (currentColumn.date) {\n          if (filters[key][0]) {\n            queryParams.search.push({\n              field: key,\n              compare: \"GEQ\",\n              value: filters[key][0].startOf(\"day\"),\n            });\n          }\n          if (filters[key][1]) {\n            queryParams.search.push({\n              field: key,\n              compare: \"LEQ\",\n              value: filters[key][1].endOf(\"day\"),\n            });\n          }\n          return;\n        }\n\n        //Handle fulltext\n        if (currentColumn.text) {\n          if (filters[key][0]) {\n            queryParams.search.push({\n              field: key,\n              compare: \"IKE\",\n              value: `%${filters[key][0]}%`,\n            });\n          }\n          return;\n        }\n\n        queryParams.search.push({\n          field: key,\n          valarr: filters[key],\n        });\n      }\n    });\n\n    //append force search\n    if (this.props.forceSearch) {\n      queryParams.search = queryParams.search.concat(this.props.forceSearch);\n    }\n\n    //append force filter\n    if (this.props.forceFilter) {\n      queryParams.filter = this.props.forceFilter;\n    }\n\n    //provide sortings\n    if (sorter.column) {\n      queryParams.orderby = [\n        `${sorter.field} ${sorter.order === \"ascend\" ? \"ASC\" : \"DESC\"}`,\n      ];\n    } else {\n      if (!sorter.field) {\n        queryParams.orderby = this.makeBasicDefaultOrderParams();\n      }\n    }\n\n    //provide paginations to query\n    if (pagination.total && !mode.skipPagination) {\n      queryParams.reclimit = pagination.pageSize;\n      queryParams.recoffset = (pagination.current - 1) * pagination.pageSize;\n    }\n\n    return queryParams;\n  };\n\n  columnGet = (key) => {\n    let result = {};\n    this.state.columns.forEach((col) => {\n      if (col.dataIndex === key) {\n        result = col;\n      }\n    });\n    return result;\n  };\n\n  count = async () => {\n    if (this.state.columns.length === 0) return 0;\n\n    let result = await this.context.api.q(\n      this.props.path.replace(\"/list\", \"/count\"),\n      this.makeQueryParams({ skipPagination: true }),\n      {},\n      this.props.forceToken || false,\n      this.props.skipToken || false\n    );\n    return result.count;\n  };\n\n  load = async () => {\n    const { pagination, columns } = this.state;\n\n    if (columns.length === 0) return;\n\n    let data = [];\n\n    this.loadStart();\n\n    pagination.total = await this.count();\n    if (pagination.total) {\n      data = await this.context.api.q(\n        this.props.path,\n        this.makeQueryParams(),\n        {\n          toArray: true,\n        },\n        this.props.forceToken || false,\n        this.props.skipToken || false\n      );\n    }\n    this.setState({ data, pagination });\n\n    this.loadEnd();\n  };\n\n  loadStart = () => {\n    this.setState({ loading: true });\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart();\n    }\n  };\n\n  loadEnd = () => {\n    this.setState({ loading: false });\n    if (this.props.onLoadEnd) {\n      this.props.onLoadEnd();\n    }\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState({ pagination, filters, sorter }, () => this.load());\n  };\n\n  render() {\n    const { columns, data, pagination, loading } = this.state;\n\n    return (\n      <div>\n        <Table\n          scroll={{ x: 400 }}\n          showSorterTooltip={false}\n          columns={columns}\n          rowKey={(record) => record.id}\n          dataSource={data}\n          pagination={pagination}\n          loading={loading || this.props.loading}\n          onChange={this.handleTableChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Space, Input } from \"antd\";\nimport { useIntl } from \"react-intl\";\n\nimport IntlMessages from \"../../util/IntlMessages\";\n\nexport default function DataTableSearch(props) {\n  const { setSelectedKeys, selectedKeys, confirm, clearFilters } = props;\n  function onChange(e) {\n    setSelectedKeys([e.target.value]);\n  }\n  function onKeyPress(e) {\n    if (e.key === \"Enter\") {\n      confirm();\n    }\n  }\n  const intl = useIntl();\n\n  return (\n    <div style={{ padding: 8 }}>\n      <Space>\n        <Input\n          placeholder={intl.formatMessage({\n            id: \"DataTableSearch.placeholder\",\n          })}\n          value={selectedKeys[0] || \"\"}\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n        />\n        <div style={{ paddingTop: 12 }}>\n          <Button type=\"primary\" onClick={() => confirm()}>\n            <IntlMessages id=\"DataTableSearch.search\" />\n          </Button>\n        </div>\n        <div style={{ paddingTop: 12 }}>\n          <Button onClick={() => clearFilters()}>\n            <IntlMessages id=\"DataTableSearch.reset\" />\n          </Button>\n        </div>\n      </Space>\n    </div>\n  );\n}\n","import { message, Popover, Spin, Tag, Modal } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport React from \"react\";\nimport Context from \"../Context\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { withOnline } from \"../api/online\";\n\nconst { confirm } = Modal;\n\nclass Statelabel extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverOpen: false,\n      methods: [],\n    };\n  }\n\n  popoverToggle = () => {\n    this.setState(\n      (state) => {\n        return {\n          popoverOpen: !state.popoverOpen,\n          methods: !state.popoverOpen ? [] : state.methods,\n        };\n      },\n      () => this.load()\n    );\n  };\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  load = async () => {\n    if (this.state.popoverOpen) {\n      this.pendingStart();\n      let methods = await this.context.api.q(\n        `/${this.props.classcode}/method`,\n        { id: this.props.id },\n        { toArray: true }\n      );\n      this.setState({ methods }, () => this.pendingEnd());\n    }\n  };\n\n  run = async (method) => {\n    this.pendingStart();\n    let result = await this.context.api.q(\"/method/run\", {\n      id: this.props.id,\n      method: method.id,\n    });\n    this.pendingEnd();\n    this.popoverToggle();\n    if (!result) {\n      message.error(this.m(\"method.fail\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"method.success\"));\n      if (this.props.onFinish) {\n        this.props.onFinish(method);\n      }\n    }\n  };\n\n  ask = async (method) => {\n    if (method.actioncode === \"drop\") {\n      confirm({\n        title: this.m(\"method.confirm.title\"),\n        content: this.m(\"method.confirm.text\"),\n        icon: <ExclamationCircleOutlined />,\n        onOk: () => {\n          this.run(method);\n        },\n      });\n    } else {\n      this.run(method);\n    }\n  };\n\n  m = (id) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id });\n  };\n\n  render() {\n    if (!this.props?.statelabel) return null;\n\n    const { pending, methods = [] } = this.state;\n\n    const colors = {\n      created: \"processing\",\n      enabled: \"success\",\n      disabled: \"default\",\n      deleted: \"error\",\n    };\n\n    const label = (\n      <Tag className=\"gx-m-0\" color={colors[this.props.statetypecode]}>\n        {this.props.statelabel}\n      </Tag>\n    );\n\n    if (this.props.readOnly) return label;\n\n    return (\n      <Popover\n        content={\n          <div className={`${methods.length === 0 && \"gx-p-3\"}`}>\n            <Spin spinning={pending}>\n              {methods.map((method) => {\n                if (!method.visible) return null;\n                return (\n                  <div\n                    key={method.id}\n                    onClick={() => this.ask(method)}\n                    className=\"gx-my-2 gx-pointer gx-link\"\n                  >\n                    {method.label}\n                  </div>\n                );\n              })}\n            </Spin>\n          </div>\n        }\n        trigger=\"click\"\n        visible={this.state.popoverOpen}\n        onVisibleChange={this.popoverToggle}\n      >\n        <div className=\"gx-pointer\">{label}</div>\n      </Popover>\n    );\n  }\n}\n\nconst mapOnlineProps = {\n  statelabel: (d) => d.statenewlabel,\n  statetypecode: (d) => d.statenewtypecode,\n};\nexport default withOnline(injectIntl(Statelabel), mapOnlineProps);\n","import React from \"react\";\nimport config from \"./config\";\nimport accessToken from \"./token\";\n\nconst online = {\n  is: false,\n\n  tick: () => {\n    online.fetch();\n  },\n  goOffline: () => {\n    if (online.is) {\n      online.is = false;\n      online.dispatch(\"onlineGoOffline\");\n      online.log(\"Went offline\");\n    }\n  },\n  goOnline: () => {\n    if (!online.is) {\n      online.is = true;\n      online.dispatch(\"onlineGoOnline\");\n      online.log(\"Back On Line\");\n    }\n  },\n  dispatch: (type, detail = {}) => {\n    window.dispatchEvent(new CustomEvent(type, { detail }));\n  },\n  fetch: async () => {\n    let token = accessToken.get();\n    if (token) {\n      let dt = new Date();\n      dt.setMilliseconds(\n        dt.getMilliseconds() - (config.apiCheckInterval + 5000)\n      );\n\n      const body = JSON.stringify({\n        search: [{ field: \"datetime\", value: dt, compare: \"GEQ\" }],\n        reclimit: 500,\n        orderby: [\"datetime DESC\"],\n      });\n\n      let json = null;\n      let response = null;\n      let headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      headers.append(\"Authorization\", `Bearer ${token}`);\n      const url = `${config.apiDomain}${config.apiPath}/notification/list`;\n\n      try {\n        response = await fetch(url, {\n          method: \"POST\",\n          headers,\n          body,\n          mode: \"cors\",\n          cache: \"no-store\",\n        });\n        if (response) {\n          json = await response.json();\n          if (json?.error) {\n            return online.error(json?.error?.message);\n          }\n        }\n        online.goOnline();\n      } catch (e) {\n        online.goOffline();\n        return online.error(e.message);\n      }\n      if (json) {\n        let items = {};\n        (Array.isArray(json) ? json : [json]).forEach((n) => {\n          if (!items[n.object]) {\n            items[n.object] = n;\n          }\n        });\n\n        let itemsCount = Object.keys(items).length;\n\n        if (itemsCount > 0) {\n          online.dispatch(\"onlineChanged\", { items });\n          online.log(\"messages count \" + itemsCount);\n        }\n      }\n      return false;\n    }\n  },\n  error: (message) => {\n    if (config.debug) {\n      console.log(`%c OnLine: ERROR \"${message}\"`, \"color: orange\");\n    }\n    return false;\n  },\n  log: (message) => {\n    if (config.debug) {\n      console.log(`%c OnLine: ${message}`, \"color: cyan\");\n    }\n  },\n};\n\nif (!window.onlineInterval && config.apiCheckInterval) {\n  window.setInterval(() => online.tick(), config.apiCheckInterval);\n}\n\nfunction withOnline(Component, mapOnlineProps) {\n  const propsKeys = Object.keys(mapOnlineProps);\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {},\n        passProps: {},\n      };\n    }\n    componentDidMount() {\n      window.addEventListener(\"onlineChanged\", this.onOnlineChanged);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"onlineChanged\", this.onOnlineChanged);\n    }\n\n    onOnlineChanged = (e) => {\n      let data = e?.detail?.items[this.props.id];\n      if (data) {\n        this.setState(({ passProps }) => {\n          propsKeys.forEach((propName) => {\n            passProps[propName] = mapOnlineProps[propName](data);\n          });\n          return { passProps };\n        });\n\n        this.setState({ data });\n      }\n    };\n\n    componentDidUpdate(prevProps) {\n      let { passProps } = this.state;\n      let anyChanges = false;\n\n      propsKeys.forEach((propName) => {\n        if (prevProps[propName] !== this.props[propName]) {\n          passProps[propName] = this.props[propName];\n          anyChanges = true;\n        }\n      });\n      if (anyChanges) this.setState({ passProps });\n    }\n\n    render() {\n      const { passProps } = this.state;\n\n      return <Component {...this.props} {...passProps} />;\n    }\n  };\n}\n\nexport { online, withOnline };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    checked = _a.checked,\n    onChange = _a.onChange,\n    onClick = _a.onClick,\n    restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nimport warning from '../_util/warning';\nimport CheckableTag from './CheckableTag';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    style = _a.style,\n    children = _a.children,\n    icon = _a.icon,\n    color = _a.color,\n    onClose = _a.onClose,\n    closeIcon = _a.closeIcon,\n    _a$closable = _a.closable,\n    closable = _a$closable === void 0 ? false : _a$closable,\n    props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` will be removed in next major version, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n    return null;\n  };\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Select } from \"antd\";\nimport Context from \"../Context\";\n\nconst { Option } = Select;\n\nclass PlainSelect extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      pending: false,\n      items: [],\n    };\n  }\n  componentDidMount() {\n    this.load().then(this.shureHaveValue());\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.shureHaveValue();\n    }\n  }\n\n  createSearch = () => {\n    let search = this.props.search || [];\n    if (this.state.searchText && this.props.async) {\n      search.push({\n        field: this.props.labelKey || \"label\",\n        compare: \"IKE\",\n        value: `%${this.state.searchText}%`,\n      });\n    }\n    if (this.props.enabledOnly) {\n      search.push({\n        field: \"statetypecode\",\n        compare: \"EQL\",\n        value: \"enabled\",\n      });\n    }\n    return search;\n  };\n\n  getLabelKey = () => this.props.labelKey || \"label\";\n\n  getIdKey = () => this.props.valueKey || \"id\";\n\n  shureHaveValue = async () => {\n    if (this.props.async) {\n      if (\n        !this.state.items.find(\n          (item) => item[this.getIdKey()] === this.props.value\n        )\n      ) {\n        this.setState({ pending: true });\n        let result = await this.context.api.q(\"/object/get\", {\n          id: this.props.value,\n          fields: [this.getIdKey(), this.getLabelKey()],\n        });\n        this.setState({ pending: false });\n        if (result?.[this.getLabelKey()]) {\n          this.setState(({ items }) => {\n            items.push(result);\n            return { items };\n          });\n        }\n      }\n    }\n  };\n\n  load = async () => {\n    if (this.props.items) {\n      this.setState({ items: this.props.items });\n      return;\n    }\n\n    let items = [];\n\n    let reclimit = this.props.async ? 1 : 0;\n\n    if (this.props.query) {\n      this.setState({ pending: true });\n      let search = this.createSearch();\n\n      let fields = [this.getIdKey(), this.getLabelKey()].concat(\n        this.props.extraFields || []\n      );\n\n      let fetchFn = this.props.cache\n        ? this.context.api.cache\n        : this.context.api.q;\n      items = await fetchFn(\n        this.props.query,\n        { search, reclimit, fields },\n        { toArray: true }\n      );\n      this.setState({ pending: false, items });\n    }\n  };\n  onSearch = async (value) => {\n    if (this.props.async) {\n      this.setState({ searchText: value }, () => this.load());\n    }\n  };\n\n  onChange = (value) => {\n    let item = this.state.items.find((i) => i[this.getIdKey()] === value);\n    this.props.onChange(value, item);\n  };\n\n  render() {\n    let valueRendered = false;\n    let items = this.state.items.map((item, idx) => {\n      let option = item || {};\n      let value = option[this.getIdKey()];\n      let label = this.props.formatLabel\n        ? this.props.formatLabel(item)\n        : option[this.getLabelKey()];\n      if (value === this.props.value) valueRendered = true;\n      return (\n        <Option key={idx} value={value}>\n          {label}\n        </Option>\n      );\n    });\n\n    return (\n      <Select\n        defaultActiveFirstOption={false}\n        allowClear={this.props.allowClear}\n        loading={this.state.pending ? true : false}\n        value={!this.state.pending ? this.props.value : null}\n        showSearch\n        placeholder={this.props.placeholder}\n        optionFilterProp=\"children\"\n        onChange={this.onChange}\n        onSearch={this.onSearch}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {items}\n      </Select>\n    );\n  }\n}\nexport default injectIntl(PlainSelect);\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M192 474h672q8 0 8 8v60q0 8-8 8H160q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","import React from \"react\";\nimport { Form, Button, message, Modal, Spin, Empty, Input } from \"antd\";\nimport Context from \"../Context\";\nimport { injectIntl } from \"react-intl\";\nclass EditModal extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadPending: false,\n      savePending: false,\n      initialValues: {},\n    };\n  }\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ loadPending: true });\n  };\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ loadPending: false });\n  };\n\n  componentDidMount() {\n    this.load();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.id !== this.props.id) {\n      this.load();\n    }\n  }\n\n  load = async () => {\n    if (this.props.id) {\n      this.pendingStart();\n      let queryParams = this.props.queryParams || { id: this.props.id };\n      let loadPath = this.props.loadPath || `/${this.props.essence}/get`;\n      let queryResult = await this.context.api.q(loadPath, queryParams, {\n        exact: true,\n      });\n      this.setState({ initialValues: queryResult || {} }, () =>\n        this.pendingEnd()\n      );\n    } else {\n      this.setState({ initialValues: {} });\n    }\n  };\n\n  save = async (data) => {\n    let item = this.state.initialValues;\n    let saveData = this.props.prepareData\n      ? this.props.prepareData({ data, item })\n      : data;\n    let savePath = this.props.savePath || `/${this.props.essence}/set`;\n\n    saveData.id = item.id || null;\n\n    this.setState({ savePending: true });\n\tconsole.log(\"@@@\", savePath, saveData)\n    let result = await this.context.api.q(savePath, saveData);\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      if (this.props.onFinish) this.props.onFinish();\n    }\n\n    this.setState({ savePending: false });\n  };\n\n  onClose = () => {\n    if (this.props.onClose) this.props.onClose();\n  };\n\n  m = (key, prefix = \"editmodal.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n\n  render() {\n    const { visible, essence, id } = this.props;\n    const { loadPending, savePending, initialValues } = this.state;\n\n    return (\n      <Modal visible={visible} footer={null} onCancel={this.onClose}>\n        <Spin spinning={loadPending}>\n          {!loadPending && id && !initialValues.id ? (\n            <Empty />\n          ) : (\n            <div className=\"gx-p-3\">\n              <Form\n                key={initialValues.id}\n                name={essence}\n                layout=\"vertical\"\n                initialValues={initialValues}\n                onFinish={this.save}\n                scrollToFirstError\n              >\n                {this.props.form}\n                <Button\n                  loading={savePending}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"gx-mb-0\"\n                >\n                  {this.m(\"save\", \"\")}\n                </Button>\n              </Form>\n            </div>\n          )}\n        </Spin>\n      </Modal>\n    );\n  }\n}\nexport default injectIntl(EditModal);\n","import React from \"react\";\nimport PlainSelect from \"../../../util/PlainSelect\";\nimport { Form, Input } from \"antd\";\nconst { TextArea } = Input;\n\nexport default function referenceEditForm({ essence }) {\n  const reference = window.appConfig?.adminReferences[essence] || {};\n\n  let formItems = {\n    name: {\n      rules: [\n        {\n          required: true,\n        },\n      ],\n    },\n\n    type: {\n      rules: [\n        {\n          required: true,\n        },\n      ],\n      label: this.m(\"typename\"),\n      component: (\n        <PlainSelect labelKey=\"name\" cache query={`/${essence}/type`} />\n      ),\n    },\n\n    description: {\n      component: <TextArea />,\n    },\n  };\n\n  if (reference.extraFields) {\n    Object.entries(reference.extraFields).forEach(([key, field]) => {\n      formItems[key] = {\n        label: this.m(key),\n      };\n      if (field.type === \"reference\") {\n        formItems[key].component = (\n          <PlainSelect labelKey=\"name\" cache query={field.path} />\n        );\n      }\n      if (field.required) {\n        formItems[key].rules = [\n          {\n            required: true,\n          },\n        ];\n      }\n    });\n  }\n\n  return (\n    <>\n      {Object.entries(formItems).map(([key, item]) => {\n        let label = item.label || this.m(key);\n        let component = item.component || <Input />;\n\n        return (\n          <Form.Item key={key} rules={item.rules} label={label} name={key}>\n            {component}\n          </Form.Item>\n        );\n      })}\n    </>\n  );\n}\n"],"sourceRoot":""}