{"version":3,"sources":["util/key.js","routes/Admin/Title.js","util/paramsHasChanged.js","util/Searchbox.js","util/Scrollbars.js","util/Layout4.js","util/TreeSelect.js","routes/Admin/Resource/ResourceForm.js","routes/Admin/Resource/Resource.js"],"names":["key","Date","toString","min","max","Math","ceil","floor","random","Title","props","title","className","to","url","icon","paramsHasChanged","prevProps","prevParams","match","params","nowParams","param1","param2","param3","searchTimeout","Searchbox","searchHandle","searchValue","setState","state","searchDelay","onSearch","searchPending","window","clearTimeout","setTimeout","searchOnChange","e","target","value","defaultValue","hasOwnProperty","this","intl","placeholder","formatMessage","id","Search","onChange","loading","React","Component","injectIntl","style","children","autoHide","autoHideTimeout","autoHideDuration","autoHeightMin","autoHeightMax","thumbMinSize","universal","Header","Layout","Content","Layout4","childTopLeft","chilfTopRight","childLeft","childRight","spinning","pending","width","searchPlaceholder","Scrollbars","IntlMessages","FTreeSelect","load","items","query","search","searchText","async","push","field","labelKey","compare","context","api","q","toTree","parentKey","allowClear","treeDefaultExpandAll","showSearch","treeNodeFilterProp","treeData","filterTreeNode","input","option","toLowerCase","indexOf","contextType","Context","TextArea","Input","ResourceForm","pendingStart","onPendingStart","pendingEnd","onPendingEnd","itemId","formKey","notFound","item","itemQuery","node","nodeId","save","data","savePending","saveData","result","message","error","success","history","m","locale","type","layout","name","initialValues","description","sequence","onFinish","onFinishFailed","onFormFinishFailed","direction","Item","label","TreeSelect","rules","required","rows","htmlType","withRouter","Resource","setParams","mode","loadTree","treeSearch","lstr","condition","rstr","tree","treeKey","onTreeSelect","selectedKeys","Array","isArray","onTreeSearch","onAddStart","onDelete","ContainerOutlined","onClick","PlusOutlined","onConfirm","okText","cancelText","DeleteOutlined","defaultExpandParent","defaultSelectedKeys","defaultExpandedKeys","onSelect"],"mappings":"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","file":"static/js/35.ba143998.chunk.js","sourcesContent":["function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default function key() {\n  return `f${(+new Date()).toString(16)}${getRandomIntInclusive(1000, 9999)}`;\n}\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nexport default function Title(props) {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h2 className=\"title gx-mb-4\">\n        <Link to={props.url} className=\"gx-text-dark\">\n          <Space>\n            {props.icon}\n            {props.title}\n          </Space>\n        </Link>\n      </h2>\n    </>\n  );\n}\n","export default function paramsHasChanged(prevProps, props) {\n  const prevParams = prevProps.match.params || {};\n  const nowParams = props.match.params || {};\n\n  if (\n    prevParams.param1 !== nowParams.param1 ||\n    prevParams.param2 !== nowParams.param2 ||\n    prevParams.param3 !== nowParams.param3\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nlet searchTimeout = null;\n\nclass Searchbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: props.defaultValue || \"\",\n      searchPending: false,\n      searchDelay: props.hasOwnProperty(\"searchDelay\")\n        ? props.searchDelay\n        : 1000,\n    };\n  }\n  searchHandle = (searchValue) => {\n    this.setState({ searchValue });\n    if (!this.state.searchDelay) {\n      if (this.props.onSearch) {\n        this.props.onSearch(searchValue);\n        return;\n      }\n    }\n    this.setState({ searchPending: true });\n    window.clearTimeout(searchTimeout);\n    searchTimeout = window.setTimeout(() => {\n      this.setState({\n        searchPending: false,\n      });\n      if (this.props.onSearch) {\n        this.props.onSearch(searchValue);\n      }\n    }, this.state.searchDelay);\n  };\n\n  searchOnChange = (e) => {\n    this.searchHandle(e.target.value);\n  };\n  render() {\n    const { intl, className } = this.props;\n    const { searchValue, searchPending } = this.state;\n    let placeholder =\n      this.props.placeholder ||\n      intl.formatMessage({ id: \"search.placeholder\" });\n    return (\n      <Input.Search\n        placeholder={placeholder}\n        className={className}\n        value={searchValue}\n        onChange={this.searchOnChange}\n        onSearch={() => this.searchHandle(searchValue)}\n        loading={searchPending}\n      />\n    );\n  }\n}\nexport default injectIntl(Searchbox);\n","import React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nexport default ({ id, style, children, className }) => (\n  <Scrollbars\n    id={id}\n    className={className}\n    style={style}\n    autoHide\n    autoHideTimeout={1000}\n    autoHideDuration={200}\n    // autoHeight\n    autoHeightMin={0}\n    autoHeightMax={200}\n    thumbMinSize={30}\n    universal={true}\n  >\n    {children}\n  </Scrollbars>\n);\n","import React from \"react\";\nimport IntlMessages from \"./IntlMessages\";\nimport Scrollbars from \"./Scrollbars\";\nimport Searchbox from \"./Searchbox\";\nimport { Layout, Spin } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nconst { Header, Content } = Layout;\n\nclass Layout4 extends React.Component {\n  render() {\n    const [\n      childTopLeft,\n      chilfTopRight,\n      childLeft,\n      childRight,\n    ] = this.props.children;\n\n    return (\n      <>\n        <Spin spinning={this.props.pending ? true : false}>\n          <div className=\"isomorphicNoteComponent\">\n            <div style={{ width: \"340px\" }} className=\"isoNoteListSidebar\">\n              <div className=\"isoNoteListWrapper\">\n                {this.props.onSearch && (\n                  <Searchbox\n                    placeholder={this.props.searchPlaceholder}\n                    className=\"isoSearchNotes\"\n                    onSearch={this.props.onSearch}\n                    searchDelay={this.props.searchDelay}\n                  />\n                )}\n\n                <div className=\"isoNoteList\">\n                  {childLeft ? (\n                    <Scrollbars>\n                      <div className=\"isoNoteListHolder\">{childLeft}</div>\n                    </Scrollbars>\n                  ) : (\n                    <span className=\"isoNoResultMsg\">\n                      <IntlMessages id=\"nothing.found\" />\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Layout className=\"isoNotepadWrapper\">\n              <Header className=\"isoHeader\">\n                {childTopLeft}\n                {chilfTopRight}\n              </Header>\n              <Content className=\"isoNoteEditingArea\">\n                {childRight && (\n                  <Scrollbars>\n                    <div className=\"isoNoteContentHolder\">{childRight}</div>\n                  </Scrollbars>\n                )}\n              </Content>\n            </Layout>\n          </div>\n        </Spin>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(Layout4);\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { TreeSelect } from \"antd\";\nimport Context from \"../Context\";\n\nclass FTreeSelect extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      pending: false,\n      items: [],\n    };\n  }\n  componentDidMount() {\n    this.load();\n  }\n  load = async () => {\n    if (this.props.items) {\n      this.setState({ items: this.props.items });\n      return;\n    }\n\n    if (this.props.query) {\n      this.setState({ pending: true });\n      let search = [];\n      if (this.state.searchText && this.props.async) {\n        search.push({\n          field: this.props.labelKey || \"label\",\n          compare: \"IKE\",\n          value: `%${this.state.searchText}%`,\n        });\n      }\n      let items = await this.context.api.q(\n        this.props.query,\n        { search },\n        { toTree: true, parentKey: this.props.parentKey }\n      );\n      this.setState({ pending: false, items });\n    }\n  };\n  onSearch = async (value) => {\n    if (this.props.async) {\n      this.setState({ searchText: value }, () => this.load());\n    }\n  };\n  render() {\n    return (\n      <TreeSelect\n        allowClear={this.props.allowClear}\n        loading={this.state.pending ? true : false}\n        value={!this.state.pending ? this.props.value : null}\n        treeDefaultExpandAll={this.props.treeDefaultExpandAll}\n        showSearch\n        placeholder={this.props.placeholder}\n        treeNodeFilterProp=\"children\"\n        onChange={this.props.onChange}\n        onSearch={this.onSearch}\n        treeData={this.state.items}\n        filterTreeNode={(input, option) =>\n          option.title.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      />\n    );\n  }\n}\nexport default injectIntl(FTreeSelect);\n","import React from \"react\";\nimport key from \"../../../util/key\";\nimport Context from \"../../../Context\";\n\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { Form, Input, Button, Space, Spin, message, Alert } from \"antd\";\n\nimport TreeSelect from \"../../../util/TreeSelect\";\n\nconst { TextArea } = Input;\n\nclass ResourceForm extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      formKey: key(),\n      savePending: false,\n      pending: false,\n      item: {},\n      notFound: false,\n    };\n  }\n\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n\n  componentDidMount() {\n    this.load();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.itemId !== this.props.itemId) {\n      this.load();\n    }\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.load();\n    }\n  }\n\n  load = async () => {\n    const { itemId } = this.props;\n    const formKey = key();\n    let notFound = false;\n\n    //Load item, has id\n    if (itemId && itemId !== \"add\") {\n      this.pendingStart();\n      let item = {};\n      let itemQuery = await this.context.api.q(\"/resource/get\", {\n        id: this.props.itemId,\n      });\n\n      if (itemQuery === false || !itemQuery.id) {\n        notFound = true;\n      } else {\n        item = itemQuery;\n      }\n      this.setState({ item, notFound, formKey }, () => this.pendingEnd());\n    }\n\n    //Sets default item, add mode\n    if (itemId === \"add\") {\n      this.setState({\n        item: {\n          node: this.props.nodeId,\n        },\n        notFound,\n        formKey,\n      });\n    }\n  };\n\n  save = async (data) => {\n    this.setState({ savePending: true });\n    const { itemId, intl } = this.props;\n\n    //Prepare save data & perform query\n    let saveData = {\n      ...data,\n      node: data.node || null,\n      id: !itemId || itemId === \"add\" ? null : itemId,\n    };\n    let result = await this.context.api.q(\"/resource/set\", saveData);\n    this.setState({ savePending: false });\n\n    //Check result\n    if (result === false) {\n      //Error...\n      message.error(intl.formatMessage({ id: \"save.fail\" }));\n    } else {\n      //Success...\n      message.success(intl.formatMessage({ id: \"save.success\" }));\n\n      //Call higher reload if present\n      if (this.props.onChange) {\n        this.props.onChange();\n      }\n      if (itemId === \"add\" && result.id) {\n        //Redirect after save if it was new item\n        this.props.history.push(`/admin/resource/${result.id}/`);\n      } else {\n        //...or reload if item was existing\n        this.load();\n      }\n    }\n  };\n\n  m = (key) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: \"admin.resource.\" + key });\n  };\n\n  render() {\n    const { savePending, pending, notFound, item, formKey } = this.state;\n    const { intl, itemId } = this.props;\n    if (notFound) {\n      return (\n        <Alert\n          type=\"error\"\n          message={intl.formatMessage({ id: \"nothing.found\" })}\n        />\n      );\n    }\n\n    return (\n      <>\n        {itemId && (\n          <Spin spinning={pending ? true : false}>\n            <Form\n              key={formKey}\n              layout=\"vertical\"\n              name=\"profile\"\n              initialValues={{\n                name: item.name || \"\",\n                description: item.description || \"\",\n                data: item.data || \"\",\n                node: item.node || \"\",\n                type: item.type || \"\",\n                sequence: item.sequence || false,\n              }}\n              onFinish={this.save}\n              onFinishFailed={this.onFormFinishFailed}\n            >\n              <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                <Form.Item label={this.m(\"node\")} name=\"node\">\n                  <TreeSelect\n                    parentKey=\"node\"\n                    treeDefaultExpandAll\n                    query=\"/resource/list\"\n                    allowClear\n                  />\n                </Form.Item>\n                <Form.Item\n                  rules={[{ required: true }]}\n                  label={this.m(\"name\")}\n                  name=\"name\"\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item label={this.m(\"description\")} name=\"description\">\n                  <Input />\n                </Form.Item>\n                <Form.Item label={this.m(\"data\")} name=\"data\">\n                  <TextArea rows={6} />\n                </Form.Item>\n\n                <Form.Item label={this.m(\"type\")} name=\"type\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    loading={savePending}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    {intl.formatMessage({\n                      id: \"save\",\n                    })}\n                  </Button>\n                </Form.Item>\n              </Space>\n            </Form>\n          </Spin>\n        )}\n      </>\n    );\n  }\n}\nexport default withRouter(injectIntl(ResourceForm));\n","import React from \"react\";\nimport key from \"../../../util/key\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { Tree, Popconfirm, Space, Tooltip, message, Button } from \"antd\";\nimport Layout4 from \"../../../util/Layout4\";\nimport Context from \"../../../Context\";\nimport paramsHasChanged from \"../../../util/paramsHasChanged\";\nimport {\n  PlusOutlined,\n  DeleteOutlined,\n  ContainerOutlined,\n} from \"@ant-design/icons\";\nimport ResourceForm from \"./ResourceForm\";\nimport Title from \"../Title\";\n\nclass Resource extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeSearch: \"\",\n      treeKey: key(),\n      tree: [],\n      itemId: null,\n      mode: null,\n    };\n  }\n  pendingStart = () => {\n    if (this.props.onPendingStart) {\n      this.props.onPendingStart();\n      return;\n    }\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    if (this.props.onPendingEnd) {\n      this.props.onPendingEnd();\n      return;\n    }\n    this.setState({ pending: false });\n  };\n  componentDidMount() {\n    this.setParams();\n    this.loadTree();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (paramsHasChanged(prevProps, this.props)) {\n      this.setParams();\n    }\n\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.loadTree();\n    }\n  }\n  setParams = () => {\n    const { param1: itemId, param2: mode } = this.props.match.params;\n    this.setState({\n      itemId,\n      mode,\n    });\n  };\n\n  loadTree = async () => {\n    this.setState({ pending: true });\n    let search = [];\n    if (this.state.treeSearch) {\n      search.push({\n        lstr: \"(\",\n        field: \"name\",\n        compare: \"IKE\",\n        value: `%${this.state.treeSearch}%`,\n      });\n      search.push({\n        condition: \"OR\",\n        field: \"description\",\n        compare: \"IKE\",\n        value: `%${this.state.treeSearch}%`,\n        rstr: \")\",\n      });\n    }\n    let tree = await this.context.api.q(\n      \"/resource/list\",\n      { search },\n      { toTree: true, parentKey: \"node\" }\n    );\n    this.setState({ tree, treeKey: key(), pending: false });\n  };\n\n  onTreeSelect = (selectedKeys) => {\n    if (Array.isArray(selectedKeys)) {\n      if (selectedKeys[0]) {\n        this.props.history.push(`/admin/resource/${selectedKeys[0]}/`);\n      }\n    }\n  };\n  onTreeSearch = (value) => {\n    this.setState({ treeSearch: value }, () => this.loadTree());\n  };\n\n  onAddStart = () => {\n    const { itemId } = this.state;\n    if (itemId) {\n      this.props.history.push(`/admin/resource/${itemId}/add`);\n    } else {\n      this.props.history.push(`/admin/resource/add`);\n    }\n  };\n\n  onDelete = async () => {\n    const { intl, history } = this.props;\n    const { itemId } = this.state;\n    this.pendingStart();\n\n    let result = await this.context.api.q(\"/resource/delete\", {\n      id: itemId,\n    });\n    if (result !== false) {\n      message.success(intl.formatMessage({ id: \"delete.success\" }));\n      history.push(`/admin/resource/`);\n      this.loadTree();\n    } else {\n      message.error(intl.formatMessage({ id: \"delete.fail\" }));\n      this.pendingEnd();\n    }\n  };\n\n  m = (key) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: \"admin.resource.\" + key });\n  };\n\n  render() {\n    const { intl } = this.props;\n    const { pending, treeKey, itemId, mode } = this.state;\n    return (\n      <>\n        <Title\n          title={this.m(\"resource\")}\n          url=\"/admin/resource\"\n          icon={<ContainerOutlined />}\n        />\n        <Layout4 pending={pending} onSearch={this.onTreeSearch}>\n          <div></div>\n          <div className=\"isoNoteBtns\">\n            <Space>\n              <Tooltip title={this.m(\"btn.add\")}>\n                <Button\n                  onClick={this.onAddStart}\n                  type=\"primary\"\n                  icon={<PlusOutlined />}\n                />\n              </Tooltip>\n              <Popconfirm\n                title={`${intl.formatMessage({\n                  id: \"delete.sure\",\n                })}`}\n                onConfirm={() => this.onDelete()}\n                okText={intl.formatMessage({ id: \"yes\" })}\n                cancelText={intl.formatMessage({ id: \"no\" })}\n              >\n                <Tooltip title={this.m(\"btn.delete\")}>\n                  <Button icon={<DeleteOutlined />} />\n                </Tooltip>\n              </Popconfirm>\n            </Space>\n          </div>\n\n          <Tree\n            key={treeKey}\n            defaultExpandParent\n            defaultSelectedKeys={[itemId]}\n            defaultExpandedKeys={[itemId]}\n            treeData={this.state.tree}\n            onSelect={this.onTreeSelect}\n          />\n\n          <div>\n            {itemId && (\n              <>\n                <ResourceForm\n                  itemId={mode !== \"add\" ? itemId : \"add\"}\n                  nodeId={itemId && itemId !== \"add\" ? itemId : null}\n                  onChange={this.loadTree}\n                  onPendingStart={this.pendingStart}\n                  onPendingEnd={this.pendingEnd}\n                />\n              </>\n            )}\n          </div>\n        </Layout4>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(Resource));\n"],"sourceRoot":""}