{"version":3,"sources":["util/toBase64.js","util/compressor.js","routes/Profile/Profile.js"],"names":["toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","readerResult","result","resultString","toString","re","type","match","encoded","replace","length","repeat","onerror","error","defaultParams","maxWidth","maxHeight","quality","compressor","base64","callParams","canvas","document","createElement","img","Object","assign","width","height","Math","round","getContext","drawImage","toDataURL","err","src","Profile","props","m","key","prefix","intl","formatMessage","id","save","data","user","setState","pending","context","api","q","username","raw","profile","password","email","name","message","success","onAfterSave","changePassword","oldpass","newpass","prepareAvatar","state","fileInputRef","current","files","maxSize","window","appConfig","maxFileSize","size","then","compressedResult","saveAvatar","modalHide","picture","modalShow","location","reload","moodalShow","React","createRef","this","layout","labelCol","span","wrapperCol","Helmet","title","visible","onOk","onCancel","footer","onClick","loading","spinning","ref","className","Flex","between","wrap","show","style","marginRight","literal","hello","backgroundColor","count","isAdmin","isGuest","connectionLink","navigator","clipboard","writeText","CopyOutlined","onFinish","autoComplete","Item","rules","required","label","initialValue","placeholder","htmlType","Password","Component","contextType","Context","connect","injectIntl"],"mappings":"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","file":"static/js/39.2ab3b2ed.chunk.js","sourcesContent":["export default function toBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const readerResult = reader.result;\n      const resultString = readerResult.toString();\n      const re = /^data:(.*,)?/;\n      let mimeRe = resultString.match(re);\n      let type = mimeRe[0];\n\n      let encoded = resultString.replace(re, \"\");\n      if (encoded.length % 4 > 0) {\n        encoded += \"=\".repeat(4 - (encoded.length % 4));\n      }\n\n      resolve({ encoded, type, readerResult });\n    };\n    reader.onerror = (error) => reject(error);\n  });\n}\n","const defaultParams = {\n  maxWidth: 2000,\n  maxHeight: 2000,\n  quality: 0.8,\n};\n\nexport default function compressor(base64, callParams = {}) {\n  const canvas = document.createElement(\"canvas\");\n  const img = document.createElement(\"img\");\n\n  const { maxWidth, maxHeight, quality } = Object.assign(\n    defaultParams,\n    callParams\n  );\n\n  return new Promise((resolve, reject) => {\n    img.onload = function () {\n      let width = img.width;\n      let height = img.height;\n\n      if (width > height) {\n        if (width > maxWidth) {\n          height = Math.round((height *= maxWidth / width));\n          width = maxWidth;\n        }\n      } else {\n        if (height > maxHeight) {\n          width = Math.round((width *= maxHeight / height));\n          height = maxHeight;\n        }\n      }\n      canvas.width = width;\n      canvas.height = height;\n\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0, width, height);\n      //resolve(base64);\n      resolve(canvas.toDataURL(\"image/jpeg\", quality));\n    };\n    img.onerror = function (err) {\n      resolve(false);\n    };\n    img.src = base64;\n  });\n}\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport Context from \"../../Context\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Form,\n  Input,\n  Button,\n  Space,\n  Card,\n  Avatar,\n  Badge,\n  Row,\n  Col,\n  message,\n  Modal,\n  Spin,\n} from \"antd\";\n\nimport { connect } from \"react-redux\";\nimport Flex from \"../../util/Flex\";\nimport compressor from \"../../util/compressor\";\nimport toBase64 from \"../../util/toBase64\";\nimport { CopyOutlined } from \"@ant-design/icons\";\n\nclass Profile extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: false,\n      moodalShow: false,\n      fileInputRef: React.createRef(),\n    };\n  }\n  m = (key, prefix = \"userprofile.\") => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: prefix + key });\n  };\n  save = async (data) => {\n    const { user } = this.props;\n    this.setState({ pending: true });\n    let result = await this.context.api.q(\"/user/set\", {\n      username: user.raw.profile.username,\n      password: data.password,\n      email: data.email,\n      name: data.name,\n    });\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      this.onAfterSave();\n    }\n  };\n\n  changePassword = async (data) => {\n    this.setState({ pending: true });\n    let result = await this.context.api.q(\"/user/password\", {\n      oldpass: data.oldpass,\n      newpass: data.newpass,\n    });\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      this.onAfterSave();\n    }\n  };\n\n  prepareAvatar = async () => {\n    if (this.state.fileInputRef.current) {\n      if (this.state.fileInputRef.current.files[0]) {\n        this.setState({ pending: true });\n        const file = this.state.fileInputRef.current.files[0];\n\n        const maxSize = window.appConfig.maxFileSize;\n        if (maxSize && file.size > maxSize) {\n          message.error(\n            `${this.m(\"file.size.exceed\", \"\")}: ${Math.round(\n              maxSize / 1024\n            )} ${this.m(\"kb\", \"\")}`\n          );\n          this.setState({ pending: false });\n          return;\n        }\n\n        let { readerResult } = await toBase64(file);\n        compressor(readerResult, { maxWidth: 200, maxHeight: 200 }).then(\n          (compressedResult) => {\n            if (compressedResult) {\n              this.saveAvatar(compressedResult);\n            } else {\n              message.error(this.m(\"file.read.failed\", \"\"));\n              this.setState({ pending: false });\n            }\n          }\n        );\n      } else {\n        this.modalHide();\n      }\n    } else {\n      this.modalHide();\n    }\n  };\n  saveAvatar = async (picture) => {\n    this.setState({ pending: true });\n    let result = await this.context.api.q(\"/user/profile/set\", {\n      picture,\n    });\n    if (!result) {\n      message.error(this.m(\"save.fail\", \"\"));\n      this.setState({ pending: false });\n    } else {\n      message.success(this.m(\"save.success\", \"\"));\n      this.onAfterSave();\n    }\n  };\n  modalShow = () => {\n    this.setState({ modalShow: true });\n  };\n  modalHide = () => {\n    this.setState({ modalShow: false });\n  };\n  onAfterSave = () => {\n    document.location.reload();\n  };\n  render() {\n    const { user } = this.props;\n    const { pending, modalShow, fileInputRef } = this.state;\n\n    const layout = {\n      labelCol: {\n        span: 8,\n      },\n      wrapperCol: {\n        span: 16,\n      },\n    };\n\n    return (\n      <div>\n        <Helmet>\n          <title>{this.m(\"profile\")}</title>\n        </Helmet>\n        <Modal\n          title={this.m(\"avatar.change\")}\n          visible={modalShow}\n          onOk={this.prepareAvatar}\n          onCancel={this.modalHide}\n          footer={[\n            <Button key=\"cancell\" onClick={this.modalHide}>\n              {this.m(\"cancell\", \"\")}\n            </Button>,\n            <Button key=\"remove\" onClick={() => this.saveAvatar(\"\")}>\n              {this.m(\"avatar.remove\")}\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={pending}\n              onClick={this.prepareAvatar}\n            >\n              {this.m(\"save\", \"\")}\n            </Button>,\n          ]}\n        >\n          <Spin spinning={pending}>\n            <input ref={fileInputRef} type=\"file\" className=\"form-control\" />\n          </Spin>\n        </Modal>\n        <h2 className=\"title gx-mb-4\">{this.m(\"profile\")}</h2>\n        <Card>\n          <Flex between className=\"flex-reset-lg\">\n            <Flex wrap>\n              <div className=\"gx-pointer\" onClick={this.modalShow}>\n                {user.show.picture ? (\n                  <Avatar\n                    size={64}\n                    src={user.show.picture}\n                    style={{\n                      marginRight: \"15px\",\n                    }}\n                  />\n                ) : (\n                  <Avatar\n                    size={64}\n                    style={{\n                      marginRight: \"15px\",\n                    }}\n                  >\n                    {user.show.literal}\n                  </Avatar>\n                )}\n              </div>\n              <div>\n                <h5>{user.show.hello}</h5>\n                <Space>\n                  <Badge\n                    style={{ backgroundColor: \"#52c41a\" }}\n                    count={this.m(\"active\")}\n                  />\n                  {user.isAdmin && (\n                    <Badge\n                      style={{ backgroundColor: \"#038FDE\" }}\n                      count={this.m(\"admin\")}\n                    />\n                  )}\n                  {user.isGuest && (\n                    <Badge\n                      style={{ backgroundColor: \"#a0d911\" }}\n                      count={this.m(\"guest\")}\n                    />\n                  )}\n                </Space>\n              </div>\n            </Flex>\n            <div className=\"gx-text-right\">\n              <div>{this.m(\"connection\")}:</div>\n              <div className=\"gx-text-muted gx-font-weight-light gx-mt-1 break-all\">\n                {user.connectionLink}\n                <span\n                  className=\"gx-ml-2 gx-link\"\n                  onClick={() => {\n                    navigator.clipboard.writeText(user.connectionLink);\n                    message.success(this.m(\"copied\"));\n                  }}\n                >\n                  <CopyOutlined />\n                </span>\n              </div>\n            </div>\n          </Flex>\n        </Card>\n        <Card>\n          <Spin spinning={pending}>\n            <Form\n              name=\"basic\"\n              onFinish={this.save}\n              className=\"gx-signin-form gx-form-row0\"\n              autoComplete=\"off\"\n              {...layout}\n            >\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    type: \"email\",\n                    message: this.m(\"email.invalid\"),\n                  },\n                ]}\n                name=\"email\"\n                label={this.m(\"email\")}\n                initialValue={user.raw.profile.email}\n              >\n                <Input placeholder={this.m(\"email\")} />\n              </Form.Item>\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    message: this.m(\"name.invalid\"),\n                  },\n                ]}\n                name=\"name\"\n                label={this.m(\"name\")}\n                initialValue={user.raw.profile.name}\n              >\n                <Input placeholder={this.m(\"name\")} />\n              </Form.Item>\n\n              <Row>\n                <Col span={8}></Col>\n                <Col span={16}>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={pending}>\n                    {this.m(\"save\", \"\")}\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Spin>\n        </Card>\n        <h2 className=\"gx-mb-4\">{this.m(\"passchange\")} </h2>\n        <Card>\n          <Spin spinning={pending}>\n            <Form\n              name=\"basic\"\n              onFinish={this.changePassword}\n              className=\"gx-signin-form gx-form-row0\"\n              autoComplete=\"off\"\n              {...layout}\n            >\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n                label={this.m(\"oldpass\")}\n                name=\"oldpass\"\n              >\n                <Input.Password />\n              </Form.Item>\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n                label={this.m(\"newpass\")}\n                name=\"newpass\"\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Row>\n                <Col span={8}></Col>\n                <Col span={16}>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={pending}>\n                    {this.m(\"change\", \"\")}\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Spin>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, null)(injectIntl(Profile));\n"],"sourceRoot":""}