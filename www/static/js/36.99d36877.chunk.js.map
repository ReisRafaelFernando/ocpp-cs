{"version":3,"sources":["util/key.js","routes/Admin/Title.js","util/paramsHasChanged.js","util/Searchbox.js","util/Scrollbars.js","util/Layout4.js","routes/Admin/Groups/Groups.js"],"names":["key","Date","toString","min","max","Math","ceil","floor","random","Title","props","title","className","to","url","icon","paramsHasChanged","prevProps","prevParams","match","params","nowParams","param1","param2","param3","searchTimeout","Searchbox","searchHandle","searchValue","setState","state","searchDelay","onSearch","searchPending","window","clearTimeout","setTimeout","searchOnChange","e","target","value","defaultValue","hasOwnProperty","this","intl","placeholder","formatMessage","id","Search","onChange","loading","React","Component","injectIntl","style","children","autoHide","autoHideTimeout","autoHideDuration","autoHeightMin","autoHeightMax","thumbMinSize","universal","Header","Layout","Content","Layout4","childTopLeft","chilfTopRight","childLeft","childRight","spinning","pending","width","searchPlaceholder","Scrollbars","IntlMessages","Text","Typography","Groups","pendingStart","pendingEnd","setParams","groupId","treeKey","load","search","treeSearch","push","field","compare","context","api","q","toTree","tree","save","data","saveData","result","message","error","success","history","getItem","find","item","onTreeSelect","selectedKeys","Array","isArray","onTreeSearch","onAddStart","onDelete","m","locale","type","name","onClick","onConfirm","okText","cancelText","defaultExpandAll","defaultExpandParent","defaultSelectedKeys","defaultExpandedKeys","treeData","onSelect","system","marginBottom","layout","initialValues","username","description","onFinish","direction","Item","rules","required","label","htmlType","contextType","Context","withRouter"],"mappings":"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","file":"static/js/36.99d36877.chunk.js","sourcesContent":["function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default function key() {\n  return `f${(+new Date()).toString(16)}${getRandomIntInclusive(1000, 9999)}`;\n}\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nexport default function Title(props) {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h2 className=\"title gx-mb-4\">\n        <Link to={props.url} className=\"gx-text-dark\">\n          <Space>\n            {props.icon}\n            {props.title}\n          </Space>\n        </Link>\n      </h2>\n    </>\n  );\n}\n","export default function paramsHasChanged(prevProps, props) {\n  const prevParams = prevProps.match.params || {};\n  const nowParams = props.match.params || {};\n\n  if (\n    prevParams.param1 !== nowParams.param1 ||\n    prevParams.param2 !== nowParams.param2 ||\n    prevParams.param3 !== nowParams.param3\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nlet searchTimeout = null;\n\nclass Searchbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: props.defaultValue || \"\",\n      searchPending: false,\n      searchDelay: props.hasOwnProperty(\"searchDelay\")\n        ? props.searchDelay\n        : 1000,\n    };\n  }\n  searchHandle = (searchValue) => {\n    this.setState({ searchValue });\n    if (!this.state.searchDelay) {\n      if (this.props.onSearch) {\n        this.props.onSearch(searchValue);\n        return;\n      }\n    }\n    this.setState({ searchPending: true });\n    window.clearTimeout(searchTimeout);\n    searchTimeout = window.setTimeout(() => {\n      this.setState({\n        searchPending: false,\n      });\n      if (this.props.onSearch) {\n        this.props.onSearch(searchValue);\n      }\n    }, this.state.searchDelay);\n  };\n\n  searchOnChange = (e) => {\n    this.searchHandle(e.target.value);\n  };\n  render() {\n    const { intl, className } = this.props;\n    const { searchValue, searchPending } = this.state;\n    let placeholder =\n      this.props.placeholder ||\n      intl.formatMessage({ id: \"search.placeholder\" });\n    return (\n      <Input.Search\n        placeholder={placeholder}\n        className={className}\n        value={searchValue}\n        onChange={this.searchOnChange}\n        onSearch={() => this.searchHandle(searchValue)}\n        loading={searchPending}\n      />\n    );\n  }\n}\nexport default injectIntl(Searchbox);\n","import React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nexport default ({ id, style, children, className }) => (\n  <Scrollbars\n    id={id}\n    className={className}\n    style={style}\n    autoHide\n    autoHideTimeout={1000}\n    autoHideDuration={200}\n    // autoHeight\n    autoHeightMin={0}\n    autoHeightMax={200}\n    thumbMinSize={30}\n    universal={true}\n  >\n    {children}\n  </Scrollbars>\n);\n","import React from \"react\";\nimport IntlMessages from \"./IntlMessages\";\nimport Scrollbars from \"./Scrollbars\";\nimport Searchbox from \"./Searchbox\";\nimport { Layout, Spin } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nconst { Header, Content } = Layout;\n\nclass Layout4 extends React.Component {\n  render() {\n    const [\n      childTopLeft,\n      chilfTopRight,\n      childLeft,\n      childRight,\n    ] = this.props.children;\n\n    return (\n      <>\n        <Spin spinning={this.props.pending ? true : false}>\n          <div className=\"isomorphicNoteComponent\">\n            <div style={{ width: \"340px\" }} className=\"isoNoteListSidebar\">\n              <div className=\"isoNoteListWrapper\">\n                {this.props.onSearch && (\n                  <Searchbox\n                    placeholder={this.props.searchPlaceholder}\n                    className=\"isoSearchNotes\"\n                    onSearch={this.props.onSearch}\n                    searchDelay={this.props.searchDelay}\n                  />\n                )}\n\n                <div className=\"isoNoteList\">\n                  {childLeft ? (\n                    <Scrollbars>\n                      <div className=\"isoNoteListHolder\">{childLeft}</div>\n                    </Scrollbars>\n                  ) : (\n                    <span className=\"isoNoResultMsg\">\n                      <IntlMessages id=\"nothing.found\" />\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Layout className=\"isoNotepadWrapper\">\n              <Header className=\"isoHeader\">\n                {childTopLeft}\n                {chilfTopRight}\n              </Header>\n              <Content className=\"isoNoteEditingArea\">\n                {childRight && (\n                  <Scrollbars>\n                    <div className=\"isoNoteContentHolder\">{childRight}</div>\n                  </Scrollbars>\n                )}\n              </Content>\n            </Layout>\n          </div>\n        </Spin>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(Layout4);\n","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport key from \"../../../util/key\";\nimport Layout4 from \"../../../util/Layout4\";\nimport {\n  Button,\n  Form,\n  Input,\n  Tree,\n  Popconfirm,\n  Space,\n  Tooltip,\n  message,\n  Typography,\n  Alert,\n} from \"antd\";\nimport Context from \"../../../Context\";\nimport {\n  PlusOutlined,\n  DeleteOutlined,\n  UsergroupAddOutlined,\n} from \"@ant-design/icons\";\nimport paramsHasChanged from \"../../../util/paramsHasChanged\";\nimport Title from \"../Title\";\n\nconst { Text } = Typography;\n\nclass Groups extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeSearch: \"\",\n      treeKey: key(),\n      tree: [],\n    };\n  }\n\n  pendingStart = () => {\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    this.setState({ pending: false });\n  };\n\n  componentDidMount() {\n    this.setParams();\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (paramsHasChanged(prevProps, this.props)) {\n      this.setParams();\n    }\n\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.load();\n    }\n  }\n\n  setParams = () => {\n    const { param1: groupId } = this.props.match.params;\n    this.setState({\n      groupId,\n      treeKey: key(),\n    });\n  };\n\n  load = async () => {\n    this.pendingStart();\n    let search = [];\n    if (this.state.treeSearch) {\n      search.push({\n        field: \"name\",\n        compare: \"IKE\",\n        value: `%${this.state.treeSearch}%`,\n      });\n    }\n    let tree = await this.context.api.q(\n      \"/admin/group/list\",\n      { search },\n      { toTree: true }\n    );\n    this.setState({\n      tree: tree || [],\n      treeKey: key(),\n    });\n    this.pendingEnd();\n  };\n\n  save = async (data) => {\n    const { groupId } = this.state;\n    const { intl } = this.props;\n\n    let saveData = {\n      ...data,\n      id: groupId && groupId !== \"add\" ? groupId : null,\n    };\n\n    this.pendingStart();\n    let result = await this.context.api.q(\"/admin/group/set\", saveData);\n\n    if (result === false) {\n      this.pendingEnd();\n      message.error(intl.formatMessage({ id: \"save.fail\" }));\n    } else {\n      message.success(intl.formatMessage({ id: \"save.success\" }));\n      await this.load();\n      if (groupId === \"add\" && result.id) {\n        this.props.history.push(`/admin/groups/${result.id}/`);\n      }\n    }\n  };\n\n  getItem = () => {\n    const { groupId, tree } = this.state;\n    return tree.find((item) => item.id === groupId) || {};\n  };\n\n  onTreeSelect = (selectedKeys) => {\n    if (Array.isArray(selectedKeys)) {\n      if (selectedKeys[0]) {\n        this.props.history.push(`/admin/groups/${selectedKeys[0]}`);\n      }\n    }\n  };\n  onTreeSearch = (value) => {\n    this.setState({ treeSearch: value }, () => this.load());\n  };\n\n  onAddStart = () => {\n    this.props.history.push(`/admin/groups/add`);\n  };\n\n  onDelete = async () => {\n    const { intl, history } = this.props;\n    const { groupId } = this.state;\n    this.pendingStart();\n\n    let result = await this.context.api.q(\"/admin/group/delete\", {\n      id: groupId,\n    });\n    if (result !== false) {\n      message.success(intl.formatMessage({ id: \"delete.success\" }));\n      history.push(`/admin/groups/`);\n      this.load();\n    } else {\n      message.error(intl.formatMessage({ id: \"delete.fail\" }));\n      this.pendingEnd();\n    }\n  };\n\n  m = (key) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: \"admin.groups.\" + key });\n  };\n\n  render() {\n    const { pending, treeKey, groupId } = this.state;\n    const { intl } = this.props;\n    const item = this.getItem();\n    return (\n      <>\n        <Title\n          title={this.m(\"groups\")}\n          url=\"/admin/groups\"\n          icon={<UsergroupAddOutlined />}\n        />\n        <Layout4 pending={pending} onSearch={this.onTreeSearch}>\n          <div>\n            {item.id && (\n              <>\n                <Text type=\"secondary\">{item.name}</Text>\n              </>\n            )}\n          </div>\n          <div className=\"isoNoteBtns\">\n            <Space>\n              <Tooltip title={this.m(\"btn.add\")}>\n                <Button\n                  onClick={this.onAddStart}\n                  type=\"primary\"\n                  icon={<PlusOutlined />}\n                />\n              </Tooltip>\n              {groupId && groupId !== \"add\" && (\n                <Popconfirm\n                  title={`${intl.formatMessage({\n                    id: \"delete.sure\",\n                  })}`}\n                  onConfirm={() => this.onDelete()}\n                  okText={intl.formatMessage({ id: \"yes\" })}\n                  cancelText={intl.formatMessage({ id: \"no\" })}\n                >\n                  <Tooltip title={this.m(\"btn.delete\")}>\n                    <Button icon={<DeleteOutlined />} />\n                  </Tooltip>\n                </Popconfirm>\n              )}\n            </Space>\n          </div>\n          <Tree\n            key={treeKey}\n            defaultExpandAll\n            defaultExpandParent\n            defaultSelectedKeys={[groupId]}\n            defaultExpandedKeys={[groupId]}\n            treeData={this.state.tree}\n            onSelect={this.onTreeSelect}\n          />\n\n          <div>\n            {item.system && (\n              <Alert\n                style={{ marginBottom: \"15px\" }}\n                type=\"warning\"\n                message={this.m(\"system\")}\n              />\n            )}\n            {groupId && (\n              <Form\n                key={item.id}\n                layout=\"vertical\"\n                name=\"type\"\n                initialValues={{\n                  name: item.name || \"\",\n                  username: item.username || \"\",\n                  description: item.description || \"\",\n                }}\n                onFinish={this.save}\n              >\n                <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                  <Form.Item\n                    rules={[{ required: true }]}\n                    label={this.m(\"name\")}\n                    name=\"name\"\n                  >\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item\n                    rules={[{ required: true }]}\n                    label={this.m(\"username\")}\n                    name=\"username\"\n                  >\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item label={this.m(\"description\")} name=\"description\">\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Space>\n                      <Button\n                        loading={pending}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                      >\n                        {intl.formatMessage({\n                          id: \"save\",\n                        })}\n                      </Button>\n                    </Space>\n                  </Form.Item>\n                </Space>\n              </Form>\n            )}\n          </div>\n        </Layout4>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(Groups));\n"],"sourceRoot":""}