{"version":3,"sources":["routes/Admin/Groups/Groups.js","util/key.js","routes/Admin/Title.js","util/paramsHasChanged.js","util/Searchbox.js","util/Scrollbars.js","util/Layout4.js"],"names":["Text","Typography","Groups","props","pendingStart","setState","pending","pendingEnd","setParams","groupId","match","params","param1","treeKey","key","load","search","state","treeSearch","push","field","compare","value","context","api","q","toTree","tree","save","data","intl","saveData","id","result","message","error","formatMessage","success","history","getItem","find","item","onTreeSelect","selectedKeys","Array","isArray","onTreeSearch","onAddStart","onDelete","m","this","prevProps","paramsHasChanged","locale","title","url","icon","onSearch","type","name","className","onClick","onConfirm","okText","cancelText","defaultExpandAll","defaultExpandParent","defaultSelectedKeys","defaultExpandedKeys","treeData","onSelect","system","style","marginBottom","layout","initialValues","username","description","onFinish","direction","width","Item","rules","required","label","loading","htmlType","React","Component","contextType","Context","withRouter","injectIntl","Date","toString","min","max","Math","ceil","floor","random","Title","to","prevParams","nowParams","param2","param3","searchTimeout","Searchbox","searchHandle","searchValue","searchDelay","searchPending","window","clearTimeout","setTimeout","searchOnChange","e","target","defaultValue","hasOwnProperty","placeholder","Search","onChange","children","autoHide","autoHideTimeout","autoHideDuration","autoHeightMin","autoHeightMax","thumbMinSize","universal","Header","Layout","Content","Layout4","childTopLeft","chilfTopRight","childLeft","childRight","spinning","searchPlaceholder","Scrollbars","IntlMessages"],"mappings":"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","file":"static/js/36.50d0f628.chunk.js","sourcesContent":["import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport key from \"../../../util/key\";\nimport Layout4 from \"../../../util/Layout4\";\nimport {\n  Button,\n  Form,\n  Input,\n  Tree,\n  Popconfirm,\n  Space,\n  Tooltip,\n  message,\n  Typography,\n  Alert,\n} from \"antd\";\nimport Context from \"../../../Context\";\nimport {\n  PlusOutlined,\n  DeleteOutlined,\n  UsergroupAddOutlined,\n} from \"@ant-design/icons\";\nimport paramsHasChanged from \"../../../util/paramsHasChanged\";\nimport Title from \"../Title\";\n\nconst { Text } = Typography;\n\nclass Groups extends React.Component {\n  static contextType = Context;\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeSearch: \"\",\n      treeKey: key(),\n      tree: [],\n    };\n  }\n\n  pendingStart = () => {\n    this.setState({ pending: true });\n  };\n  pendingEnd = () => {\n    this.setState({ pending: false });\n  };\n\n  componentDidMount() {\n    this.setParams();\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (paramsHasChanged(prevProps, this.props)) {\n      this.setParams();\n    }\n\n    if (prevProps.intl.locale !== this.props.intl.locale) {\n      this.load();\n    }\n  }\n\n  setParams = () => {\n    const { param1: groupId } = this.props.match.params;\n    this.setState({\n      groupId,\n      treeKey: key(),\n    });\n  };\n\n  load = async () => {\n    this.pendingStart();\n    let search = [];\n    if (this.state.treeSearch) {\n      search.push({\n        field: \"name\",\n        compare: \"IKE\",\n        value: `%${this.state.treeSearch}%`,\n      });\n    }\n    let tree = await this.context.api.q(\n      \"/admin/group/list\",\n      { search },\n      { toTree: true }\n    );\n    this.setState({\n      tree: tree || [],\n      treeKey: key(),\n    });\n    this.pendingEnd();\n  };\n\n  save = async (data) => {\n    const { groupId } = this.state;\n    const { intl } = this.props;\n\n    let saveData = {\n      ...data,\n      id: groupId && groupId !== \"add\" ? groupId : null,\n    };\n\n    this.pendingStart();\n    let result = await this.context.api.q(\"/admin/group/set\", saveData);\n\n    if (result === false) {\n      this.pendingEnd();\n      message.error(intl.formatMessage({ id: \"save.fail\" }));\n    } else {\n      message.success(intl.formatMessage({ id: \"save.success\" }));\n      await this.load();\n      if (groupId === \"add\" && result.id) {\n        this.props.history.push(`/admin/groups/${result.id}/`);\n      }\n    }\n  };\n\n  getItem = () => {\n    const { groupId, tree } = this.state;\n    return tree.find((item) => item.id === groupId) || {};\n  };\n\n  onTreeSelect = (selectedKeys) => {\n    if (Array.isArray(selectedKeys)) {\n      if (selectedKeys[0]) {\n        this.props.history.push(`/admin/groups/${selectedKeys[0]}`);\n      }\n    }\n  };\n  onTreeSearch = (value) => {\n    this.setState({ treeSearch: value }, () => this.load());\n  };\n\n  onAddStart = () => {\n    this.props.history.push(`/admin/groups/add`);\n  };\n\n  onDelete = async () => {\n    const { intl, history } = this.props;\n    const { groupId } = this.state;\n    this.pendingStart();\n\n    let result = await this.context.api.q(\"/admin/group/delete\", {\n      id: groupId,\n    });\n    if (result !== false) {\n      message.success(intl.formatMessage({ id: \"delete.success\" }));\n      history.push(`/admin/groups/`);\n      this.load();\n    } else {\n      message.error(intl.formatMessage({ id: \"delete.fail\" }));\n      this.pendingEnd();\n    }\n  };\n\n  m = (key) => {\n    const { intl } = this.props;\n    return intl.formatMessage({ id: \"admin.groups.\" + key });\n  };\n\n  render() {\n    const { pending, treeKey, groupId } = this.state;\n    const { intl } = this.props;\n    const item = this.getItem();\n    return (\n      <>\n        <Title\n          title={this.m(\"groups\")}\n          url=\"/admin/groups\"\n          icon={<UsergroupAddOutlined />}\n        />\n        <Layout4 pending={pending} onSearch={this.onTreeSearch}>\n          <div>\n            {item.id && (\n              <>\n                <Text type=\"secondary\">{item.name}</Text>\n              </>\n            )}\n          </div>\n          <div className=\"isoNoteBtns\">\n            <Space>\n              <Tooltip title={this.m(\"btn.add\")}>\n                <Button\n                  onClick={this.onAddStart}\n                  type=\"primary\"\n                  icon={<PlusOutlined />}\n                />\n              </Tooltip>\n              {groupId && groupId !== \"add\" && (\n                <Popconfirm\n                  title={`${intl.formatMessage({\n                    id: \"delete.sure\",\n                  })}`}\n                  onConfirm={() => this.onDelete()}\n                  okText={intl.formatMessage({ id: \"yes\" })}\n                  cancelText={intl.formatMessage({ id: \"no\" })}\n                >\n                  <Tooltip title={this.m(\"btn.delete\")}>\n                    <Button icon={<DeleteOutlined />} />\n                  </Tooltip>\n                </Popconfirm>\n              )}\n            </Space>\n          </div>\n          <Tree\n            key={treeKey}\n            defaultExpandAll\n            defaultExpandParent\n            defaultSelectedKeys={[groupId]}\n            defaultExpandedKeys={[groupId]}\n            treeData={this.state.tree}\n            onSelect={this.onTreeSelect}\n          />\n\n          <div>\n            {item.system && (\n              <Alert\n                style={{ marginBottom: \"15px\" }}\n                type=\"warning\"\n                message={this.m(\"system\")}\n              />\n            )}\n            {groupId && (\n              <Form\n                key={item.id}\n                layout=\"vertical\"\n                name=\"type\"\n                initialValues={{\n                  name: item.name || \"\",\n                  username: item.username || \"\",\n                  description: item.description || \"\",\n                }}\n                onFinish={this.save}\n              >\n                <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                  <Form.Item\n                    rules={[{ required: true }]}\n                    label={this.m(\"name\")}\n                    name=\"name\"\n                  >\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item\n                    rules={[{ required: true }]}\n                    label={this.m(\"username\")}\n                    name=\"username\"\n                  >\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item label={this.m(\"description\")} name=\"description\">\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Space>\n                      <Button\n                        loading={pending}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                      >\n                        {intl.formatMessage({\n                          id: \"save\",\n                        })}\n                      </Button>\n                    </Space>\n                  </Form.Item>\n                </Space>\n              </Form>\n            )}\n          </div>\n        </Layout4>\n      </>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(Groups));\n","function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default function key() {\n  return `f${(+new Date()).toString(16)}${getRandomIntInclusive(1000, 9999)}`;\n}\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nexport default function Title(props) {\n  return (\n    <>\n      <Helmet>\n        <title>{props.title}</title>\n      </Helmet>\n      <h2 className=\"title gx-mb-4\">\n        <Link to={props.url} className=\"gx-text-dark\">\n          <Space>\n            {props.icon}\n            {props.title}\n          </Space>\n        </Link>\n      </h2>\n    </>\n  );\n}\n","export default function paramsHasChanged(prevProps, props) {\n  const prevParams = prevProps.match.params || {};\n  const nowParams = props.match.params || {};\n\n  if (\n    prevParams.param1 !== nowParams.param1 ||\n    prevParams.param2 !== nowParams.param2 ||\n    prevParams.param3 !== nowParams.param3\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nlet searchTimeout = null;\n\nclass Searchbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: props.defaultValue || \"\",\n      searchPending: false,\n      searchDelay: props.hasOwnProperty(\"searchDelay\")\n        ? props.searchDelay\n        : 1000,\n    };\n  }\n  searchHandle = (searchValue) => {\n    this.setState({ searchValue });\n    if (!this.state.searchDelay) {\n      if (this.props.onSearch) {\n        this.props.onSearch(searchValue);\n        return;\n      }\n    }\n    this.setState({ searchPending: true });\n    window.clearTimeout(searchTimeout);\n    searchTimeout = window.setTimeout(() => {\n      this.setState({\n        searchPending: false,\n      });\n      if (this.props.onSearch) {\n        this.props.onSearch(searchValue);\n      }\n    }, this.state.searchDelay);\n  };\n\n  searchOnChange = (e) => {\n    this.searchHandle(e.target.value);\n  };\n  render() {\n    const { intl, className } = this.props;\n    const { searchValue, searchPending } = this.state;\n    let placeholder =\n      this.props.placeholder ||\n      intl.formatMessage({ id: \"search.placeholder\" });\n    return (\n      <Input.Search\n        placeholder={placeholder}\n        className={className}\n        value={searchValue}\n        onChange={this.searchOnChange}\n        onSearch={() => this.searchHandle(searchValue)}\n        loading={searchPending}\n      />\n    );\n  }\n}\nexport default injectIntl(Searchbox);\n","import React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nexport default ({ id, style, children, className }) => (\n  <Scrollbars\n    id={id}\n    className={className}\n    style={style}\n    autoHide\n    autoHideTimeout={1000}\n    autoHideDuration={200}\n    // autoHeight\n    autoHeightMin={0}\n    autoHeightMax={200}\n    thumbMinSize={30}\n    universal={true}\n  >\n    {children}\n  </Scrollbars>\n);\n","import React from \"react\";\nimport IntlMessages from \"./IntlMessages\";\nimport Scrollbars from \"./Scrollbars\";\nimport Searchbox from \"./Searchbox\";\nimport { Layout, Spin } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nconst { Header, Content } = Layout;\n\nclass Layout4 extends React.Component {\n  render() {\n    const [\n      childTopLeft,\n      chilfTopRight,\n      childLeft,\n      childRight,\n    ] = this.props.children;\n\n    return (\n      <>\n        <Spin spinning={this.props.pending ? true : false}>\n          <div className=\"isomorphicNoteComponent\">\n            <div style={{ width: \"340px\" }} className=\"isoNoteListSidebar\">\n              <div className=\"isoNoteListWrapper\">\n                {this.props.onSearch && (\n                  <Searchbox\n                    placeholder={this.props.searchPlaceholder}\n                    className=\"isoSearchNotes\"\n                    onSearch={this.props.onSearch}\n                    searchDelay={this.props.searchDelay}\n                  />\n                )}\n\n                <div className=\"isoNoteList\">\n                  {childLeft ? (\n                    <Scrollbars>\n                      <div className=\"isoNoteListHolder\">{childLeft}</div>\n                    </Scrollbars>\n                  ) : (\n                    <span className=\"isoNoResultMsg\">\n                      <IntlMessages id=\"nothing.found\" />\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Layout className=\"isoNotepadWrapper\">\n              <Header className=\"isoHeader\">\n                {childTopLeft}\n                {chilfTopRight}\n              </Header>\n              <Content className=\"isoNoteEditingArea\">\n                {childRight && (\n                  <Scrollbars>\n                    <div className=\"isoNoteContentHolder\">{childRight}</div>\n                  </Scrollbars>\n                )}\n              </Content>\n            </Layout>\n          </div>\n        </Spin>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(Layout4);\n"],"sourceRoot":""}